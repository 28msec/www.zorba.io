<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-02-17T14:42:36.342765+02:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://www.28msec.com/modules/parallelism</xqdoc:uri><xqdoc:name>parallelism</xqdoc:name><xqdoc:comment><xqdoc:description> <p>This module provides functionality for executing FLWOR queries in parallel.</p>
 <p>There are two kinds of parallel jobs: map jobs and shuffle jobs.</p>
 <p>A map job runs a mapping function on the items of an input collection. The input
 collection is chunked and the mapping function is called on each chunk in parallel.
 The results are either inserted in a single collection, or on one ouptut collection
 for each chunk.</p>
 <p>A shuffle job shuffles the items of an input collection to several output collections.
 The input collection is chunked and each chunk is processed in parallel.
 The selection of the output collection for each item is done with a shuffling function.</p>
 <p>It is also possible to run a map or shuffle job on the output of another map or shuffle
 job (piping).
 Keep in mind though that if an intermediate output is in a
 single collection, no chunking can be done: only the first job of the pipeline can chunk
 its input.
 Hence, for performance, it makes sense that all intermediate jobs
 in the pipeline (except the last one, although not compulsory) output to automatically
 generated temporary collections rather than a single collection. That way, the next job
 can be executed on these collections in parallel.</p>
 <p>Map jobs allow the parallel execution of "simple" FLWORs: a for on a big collection, let clauses,
 small for clauses, where clauses.
 Map-shuffle-map piping allows the parallel execution of FLWORs containing a group by clause.
 Jobs can be composed in many ways, for example map-map-shuffle-map-shuffle-map. This way,
 FLWORs with several group by clauses can be parallelized.
 In some circumstances, FLWORs with order by clauses (using bucket sort) can also be
 parallelized, but one should keep in mind that collections are not ordered so that
 any ordering within a map job is susceptible to be lost in the output.</p>
</xqdoc:description><xqdoc:author>Ghislain Fourny</xqdoc:author><xqdoc:author>Julien Ribon</xqdoc:author><xqdoc:custom tag="language">xquery</xqdoc:custom><xqdoc:custom tag="version">3.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="" isSchema="false"/><xqdoc:namespace prefix="job" uri="http://www.28msec.com/modules/asynchronous-jobs" isSchema="false"/><xqdoc:namespace prefix="parallel" uri="http://www.28msec.com/modules/parallelism" isSchema="false"/><xqdoc:namespace prefix="rand" uri="http://zorba.io/modules/random" isSchema="false"/><xqdoc:namespace prefix="store" uri="http://www.28msec.com/modules/store" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://zorba.io/modules/random</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://www.28msec.com/modules/store</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Schedules a parallel map job on a collection or on the output of another
 parallel job.</p>
 <p>The name of the output collections are randomly generated (one for
 each chunk and start with <tt>_28.temporary</tt>.</p>
 <p>Example of usage:</p>
 parallel:map("input", my:function#1)
</xqdoc:description><xqdoc:param>$input The name of the collection to process, or the id of a parallel job of which the output will be taken.</xqdoc:param><xqdoc:param>$function the function which is run in parallel on the collection's contents.</xqdoc:param><xqdoc:return>A parallel job id that can be used to query the parallel job's properties.</xqdoc:return><xqdoc:error>job:JBDY0005 if the supplied function does not have a name.</xqdoc:error><xqdoc:error>job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error><xqdoc:error>job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error></xqdoc:comment><xqdoc:name>parallel:map</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function parallel:map($input as xs:string, $function as function (item()*) as item()*) as xs:string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>input</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>function</xqdoc:name><xqdoc:type>function (item()*) as item()*</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/parallelism</xqdoc:uri><xqdoc:name>map</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Schedules a parallel map job on a collection or on the output of another
 parallel job.</p>
 <p>The $options parameter allows for the specification of properties for
 the parallel job. Allowed options are:
 <ul>
   <li><tt>output-collection as string</tt>: the name of the collection in
     which the output of the executed query is stored. If not specified,
     the result of the query will be stored in a collection withing the
     MongoDB database associated with the project. The name of the
     collection is randomly generated and starts with <tt>_28.temporary</tt>
   </li>
   <li><tt>chunk-size</tt>: the size of the chunks the collection must be split
   into, if it is not already sharded (default: MongoDB sharding, or 1000).
   </li>
 </ul>
 </p>
 <p>Example of usage:</p>
 parallel:map("input", my:function#1, { "chunk-size" : xs:int(1000) })
 parallel:map("input",
              my:function#1,
              {
                "chunk-size" : xs:int(1000),
                "output-collection" : output"
              }
 )
</xqdoc:description><xqdoc:param>$input The name of the collection to process, or the id of a parallel job of which the output will be taken.</xqdoc:param><xqdoc:param>$function The function which is run in parallel on the collection's contents.</xqdoc:param><xqdoc:param>$options An object specifying above options for the parallel job.</xqdoc:param><xqdoc:return>A parallel job id that can be used to query the parallel job's properties.</xqdoc:return><xqdoc:error>err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error><xqdoc:error>job:JBDY0005 if the supplied function does not have a name.</xqdoc:error><xqdoc:error>job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error><xqdoc:error>job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error></xqdoc:comment><xqdoc:name>parallel:map</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function parallel:map($input as xs:string, $function as function (item()*) as item()*, $options as object()?) as xs:string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>input</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>function</xqdoc:name><xqdoc:type>function (item()*) as item()*</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>build-map-shuffle</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>get</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>schedule</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/store</xqdoc:uri><xqdoc:name>collection-chunk-specs</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/store</xqdoc:uri><xqdoc:name>collection-chunk-specs</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.28msec.com/modules/store</xqdoc:uri><xqdoc:name>flush</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>create</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>is-available-collection</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>truncate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://zorba.io/modules/random</xqdoc:uri><xqdoc:name>uuid</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>members</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Schedules a parallel shuffle job on a collection or on the output of another
 parallel job.</p>
 <p>The output collection for each item is determined by calling the shuffle function,
 which gives an integer i. The i-th output collection
 is then taken. If necessary, a modulo operation is done
 to make sure that the integer is comprised between 1 and the number of output collections.</p>
 <p>The name of the output collections are randomly generated (10 of them) and
 start with <tt>_28.temporary</tt>.</p>
 <p>Example of usage:</p>
 parallel:shuffle("input", my:function#1)
</xqdoc:description><xqdoc:param>$input The name of the collection to process, or the id of a parallel job of which the output will be taken.</xqdoc:param><xqdoc:param>$function the function which is run on each item to determine where it is shuffled to.</xqdoc:param><xqdoc:return>A parallel job id that can be used to query the parallel job's properties.</xqdoc:return><xqdoc:error>job:JBDY0005 if the supplied function does not have a name.</xqdoc:error><xqdoc:error>job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error><xqdoc:error>job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error></xqdoc:comment><xqdoc:name>parallel:shuffle</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function parallel:shuffle($input as xs:string, $function as function (item()) as xs:integer) as xs:string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>input</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>function</xqdoc:name><xqdoc:type>function (item()) as xs:integer</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/parallelism</xqdoc:uri><xqdoc:name>shuffle</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Schedules a parallel shuffle job on a collection or on the output of another
 parallel job.</p>
 <p>The output collection for each item is determined by calling the shuffle function,
 which gives an integer i. The i-th output collection
 is then taken. If necessary, a modulo operation is done
 to make sure that the integer is comprised between 1 and the number of output collections.</p>
 <p>The $options parameter allows for the specification of properties for
 the parallel shuffle job. Allowed options are:
 <ul>
   <li><tt>number-of-output-collections as integer</tt>: the number of output collections
     to automatically generate if none are provided. The default value is 10. An error is raised
     if the provided value is not positive.
   </li>
   <li><tt>output-collections as array</tt>: an array with the names of the collections in
     which the items of the input collections are shuffled. If not specified,
     these collections will be automatically generated (as many as specified in the
     <tt>number-of-output-collections</tt> option) in the
     MongoDB database associated with the project. The name of the
     collections are randomly generated and start with <tt>_28.temporary</tt>
   </li>
   <li><tt>chunk-size</tt>: the size of the chunks the collection must be split
   into, if it is not already sharded (default: MongoDB sharding, or 1000).
   </li>
 </ul>
 </p>
 <p>Example of usage:</p>
 parallel:shuffle("input", my:function#1, { "chunk-size" : xs:int(1000) })
 parallel:shuffle("input",
                  my:function#1,
                  {
                    "chunk-size" : xs:int(1000),
                    "output-collections" : [ "output1", "output2" ]
                  }
 )
 parallel:shuffle("input",
                  my:function#1,
                  {
                    "number-of-output-collections" : 20
                  }
 )
</xqdoc:description><xqdoc:param>$input The name of the collection to process, or the id of a parallel job of which the output will be taken.</xqdoc:param><xqdoc:param>$function the function which is run on each item to determine where it is shuffled to.</xqdoc:param><xqdoc:param>$options An object specifying above options for the parallel shuffle job.</xqdoc:param><xqdoc:return>A parallel job id that can be used to query the parallel job's properties.</xqdoc:return><xqdoc:error>err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error><xqdoc:error>job:JBDY0005 if the supplied function does not have a name.</xqdoc:error><xqdoc:error>job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error><xqdoc:error>job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error><xqdoc:error>err:FOCA0002 if number-of-output-collections is not a positive integer.</xqdoc:error></xqdoc:comment><xqdoc:name>parallel:shuffle</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function parallel:shuffle($input as item(), $function as function (item()) as xs:integer, $options as object()?) as xs:string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>input</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>function</xqdoc:name><xqdoc:type>function (item()) as xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>build-map-shuffle</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>get</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>schedule</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.28msec.com/modules/parallelism</xqdoc:uri><xqdoc:name>create-random-collection</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/store</xqdoc:uri><xqdoc:name>collection-chunk-specs</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/store</xqdoc:uri><xqdoc:name>collection-chunk-specs</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.28msec.com/modules/store</xqdoc:uri><xqdoc:name>flush</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>create</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>is-available-collection</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>members</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>truncate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://zorba.io/modules/random</xqdoc:uri><xqdoc:name>uuid</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>members</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the general status of the parallel job.</p>
</xqdoc:description><xqdoc:param>$id id of the parallel job to query, as it was returned by map or shuffle.</xqdoc:param><xqdoc:return>The status of the corresponding parallel job. The empty sequence if the job does not exist.</xqdoc:return></xqdoc:comment><xqdoc:name>parallel:status</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function parallel:status($id as xs:string) as xs:string?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>id</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">xs:string?</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/parallelism</xqdoc:uri><xqdoc:name>job-statuses</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>count</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>true</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the statuses of the underlying asynchronous jobs, as an object
 indicating the number of chunks in each status.</p>
</xqdoc:description><xqdoc:param>$id The id of the parallel job to query, as it was returned by map or shuffle.</xqdoc:param><xqdoc:return>The statuses of the underlying jobs. The empty sequence if the parallel job does not exist.</xqdoc:return></xqdoc:comment><xqdoc:name>parallel:job-statuses</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function parallel:job-statuses($id as xs:string) as object()?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>id</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">object()?</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>get</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>count</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the results of the specified parallel job.</p>
</xqdoc:description><xqdoc:param>$id The id of the parallel job to query, as it was returned by map or shuffle.</xqdoc:param><xqdoc:return>The structured items output by the corresponding parallel job. The empty sequence if the job does not exist.</xqdoc:return></xqdoc:comment><xqdoc:name>parallel:results</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function parallel:results($id as xs:string) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>id</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>get</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/store/static/collections/dml</xqdoc:uri><xqdoc:name>collection</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>members</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns the output collections of the specified parallel job.</p>
</xqdoc:description><xqdoc:param>$id The id of the parallel job to query, as it was returned by map or shuffle.</xqdoc:param><xqdoc:return>The names of the output collections to which the corresponding parallel job writes. The empty sequence if the job does not exist.</xqdoc:return></xqdoc:comment><xqdoc:name>parallel:output-collections</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function parallel:output-collections($id as xs:string) as xs:string*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>id</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">xs:string*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/asynchronous-jobs</xqdoc:uri><xqdoc:name>get</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>distinct-values</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>members</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:name>parallel:create-random-collection</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %private %an:sequential function parallel:create-random-collection() as xs:string+</xqdoc:signature><xqdoc:return><xqdoc:type occurrence="+">xs:string+</xqdoc:type></xqdoc:return><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>current-date</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>format-date</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://zorba.io/modules/random</xqdoc:uri><xqdoc:name>uuid</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/store/static/collections/dml</xqdoc:uri><xqdoc:name>create</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/store/static/collections/dml</xqdoc:uri><xqdoc:name>is-available-collection</xqdoc:name></xqdoc:invoked></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>