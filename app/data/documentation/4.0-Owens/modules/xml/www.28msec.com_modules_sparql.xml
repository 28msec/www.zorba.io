<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-02-17T14:42:36.342765+02:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>sparql</xqdoc:name><xqdoc:comment><xqdoc:description> This module contains functions to interact with a SPARQL endpoint.
 Requests to an endpoint are made using HTTP.
 Specifically, this module allows SELECT, ASK, CONSTRUCT and DESCRIBE queries. Additionally, it also allows for UPDATE statements.
 Various result formats are supported (e.g. XML, JSON, CSV)
 <h2>Configuration</h2>
 For this module you may use a preconfigured default or named datasource of the SPARQL category.
 You can also provide a configuration object directly.
 <p>As config parameter you can either pass a string that will be interpreted as a SPARQL endpoint datasource name or
  an object with the following properties:
 <ul>
  <li><tt>href</tt>: The URL of the SPARQL endpoint to use. Required.</li>
  <li><tt>auth_method</tt>: The HTTP authentication method to use.</li>
  <li><tt>username</tt>: The username to use for HTTP authentication.</li>
  <li><tt>password</tt>: The password to use for HTTP authentication.</li>
 </ul>
 </p>
 <h2>Options</h2>
 <p>The options object that can be passed to plenty of the functions in this module. It may have the following properties:
 <ul>
   <li><tt>default-graph-uri</tt>: A string or an array of strings with the graph URIs to be used by the query.</li>
   <li><tt>named-graph-uri</tt>: A string or an array of strings with the named graph URIs to be used by the query.</li>
   <li><tt>using-graph-uri</tt>: A string or an array of strings with the graph URIs to be used by an update statement.</li>
   <li><tt>using-named-graph-uri</tt>: A string or an array of strings with the named graph URIs to be used by an update statement.</li>
   <li><tt>method</tt>: The request method to be used. Available method values are $sparql:METHOD-GET, $sparql:METHOD-POST-URLENCODED or $sparql:METHOD-POST-SPARQL.</li>
   <li><tt>format</tt> : The result format to request. Possible format values are $sparql:FORMAT-XML, $sparql:FORMAT-JSON, $sparql:FORMAT-CSV, $sparql:FORMAT-TSV, $sparql:FORMAT-ANY. For CONSTRUCT or DESCRIBE queries $sparql:FORMAT-RDF is available.</li>
   <li><tt>parameters</tt>: Many SPARQL endpoints support additional parameters which are not part of the SPARQL endpoint specification. They can be provided here.</li>
   <li><tt>http-headers</tt>: object that will be used as the headers property for the requests made by the http-client.</li>
   <li><tt>http-options</tt>: object that will be used as the options property for the requests made by the http-client.</li>
  </ul>
 <p>All those properties are optional.</p>
 </p>
</xqdoc:description><xqdoc:author>Alexander.Kreutz@28msec.com</xqdoc:author><xqdoc:custom tag="language">jsoniq</xqdoc:custom><xqdoc:custom tag="version">1.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="" isSchema="false"/><xqdoc:namespace prefix="credentials" uri="http://www.28msec.com/modules/credentials" isSchema="false"/><xqdoc:namespace prefix="http-client" uri="http://zorba.io/modules/http-client" isSchema="false"/><xqdoc:namespace prefix="rdf" uri="http://www.w3.org/1999/02/22-rdf-syntax-ns#" isSchema="false"/><xqdoc:namespace prefix="s" uri="http://www.w3.org/2005/sparql-results#" isSchema="false"/><xqdoc:namespace prefix="sparql" uri="http://www.28msec.com/modules/sparql" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="library"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables><xqdoc:variable><xqdoc:uri>sparql:CREDENTIALS-CATEGORY</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the category of the datasource.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:METHOD-GET</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the request method using HTTP GET requests. May be used for the <tt>method</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:METHOD-POST-URLENCODED</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the request method using HTTP POST with URL-encoded parameters. May be used for the <tt>method</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:METHOD-POST-SPARQL</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the request method using HTTP POST with the application/sparql-query content type. May be used for the <tt>method</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:FORMAT-XML</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the SPARQL XML result format.May be used for the <tt>format</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:FORMAT-JSON</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the SPARQL JSON result format.May be used for the <tt>format</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:FORMAT-RDF</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the RDF+XML result format.May be used for the <tt>format</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:FORMAT-CSV</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the CSV result format.May be used for the <tt>format</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:FORMAT-TSV</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents the TSV result format.May be used for the <tt>format</tt> property of the options object.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>sparql:FORMAT-ANY</xqdoc:uri><xqdoc:comment><xqdoc:description> This variable represents any result format. May be used for the <tt>format</tt> property of the options object to not specify a requested format.
</xqdoc:description><xqdoc:custom tag="type">string</xqdoc:custom></xqdoc:comment></xqdoc:variable></xqdoc:variables><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.
 </p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$config The name of the credentials to use as string or a config object as described in the module description.</xqdoc:param><xqdoc:param>$query A SPARQL query as string. May be any kind of query but not an update.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The endpoints response. This function returns the plain response object from the http-client.</xqdoc:return><xqdoc:error>sparql:INVALID-PARAMETER invalid option specification</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error></xqdoc:comment><xqdoc:name>sparql:query</xqdoc:name><xqdoc:signature>declare function sparql:query($config as item()?, $query as string, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate-options</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.
 The default datasource for SPARQL will be used.
 </p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL query as string. May be any kind of query but not an update.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The endpoints response. This function returns the plain response object from the http-client.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query</xqdoc:name><xqdoc:signature>declare function sparql:query($query as string, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL query to an endpoint and directly returns the corresponding HTTP response.
 The default datasource for SPARQL will be used.
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL query as string. May be any kind of query but not an update.</xqdoc:param><xqdoc:return>The endpoints response. This function returns the plain response object from the http-client.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query</xqdoc:name><xqdoc:signature>declare function sparql:query($query as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.
 If the endpoint fails to deliver SPARQL JSON result format this function will try to convert the results to JSON if possible.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/sparql11-results-json" target="_blank">SPARQL 1.1 Query Results JSON Format</a></p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object will be ignored. "application/sparql-results+json" will be requested as result format. </li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$config The name of the credentials to use as string or a config object as described in the module description.</xqdoc:param><xqdoc:param>$query A SPARQL SELECT or ASK query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The query result in SPARQL JSON format.</xqdoc:return><xqdoc:error>sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error><xqdoc:error>sparql:ERROR if any http or endpoint error occurs</xqdoc:error><xqdoc:error>sparql:INVALID-PARAMETER invalid option specification</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error></xqdoc:comment><xqdoc:name>sparql:query-json</xqdoc:name><xqdoc:signature>declare function sparql:query-json($config as item()?, $query as string, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>check-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>parse-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate-options</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>xml-to-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.
 If the endpoint fails to deliver SPARQL JSON result format this function will try to convert the results to JSON if possible.
 The default datasource for SPARQL will be used.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/sparql11-results-json" target="_blank">SPARQL 1.1 Query Results JSON Format</a></p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object will be ignored. "application/sparql-results+json" will be requested as result format. </li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL SELECT or ASK query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The query result in SPARQL JSON format.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query-json</xqdoc:name><xqdoc:signature>declare function sparql:query-json($query as string, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query-json</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL JSON format object.
 If the endpoint fails to deliver SPARQL JSON result format this function will try to convert the results to JSON if possible.
 The default datasource for SPARQL will be used.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/sparql11-results-json" target="_blank">SPARQL 1.1 Query Results JSON Format</a></p>
</xqdoc:description><xqdoc:param>$query A SPARQL SELECT or ASK query as string.</xqdoc:param><xqdoc:return>The query result in SPARQL JSON format.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query-json</xqdoc:name><xqdoc:signature>declare function sparql:query-json($query as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query-json</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.
 If the endpoint fails to deliver SPARQL XML result format this function will try to convert the results to XML if possible.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/rdf-sparql-XMLres/" target="_blank">SPARQL Query Results XML Format</a></p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object will be ignored. "application/sparql-results+xml" will be requested as result format. </li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$config The name of the credentials to use as string or a config object as described in the module description.</xqdoc:param><xqdoc:param>$query A SPARQL SELECT or ASK query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The query result in SPARQL XML format.</xqdoc:return><xqdoc:error>sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error><xqdoc:error>sparql:ERROR if any http or endpoint error occurs</xqdoc:error><xqdoc:error>sparql:INVALID-PARAMETER invalid option specification</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error></xqdoc:comment><xqdoc:name>sparql:query-xml</xqdoc:name><xqdoc:signature>declare function sparql:query-xml($config as item()?, $query as string, $options as object()?) as element(s:sparql)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(s:sparql)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>check-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>json-to-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>parse-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate-options</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.
 If the endpoint fails to deliver SPARQL XML result format this function will try to convert the results to XML if possible.
 The default datasource for SPARQL will be used.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/rdf-sparql-XMLres/" target="_blank">SPARQL Query Results XML Format</a></p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object will be ignored. "application/sparql-results+xml" will be requested as result format. </li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL SELECT or ASK query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The query result in SPARQL XML format.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query-xml</xqdoc:name><xqdoc:signature>declare function sparql:query-xml($query as string, $options as object()?) as element(s:sparql)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(s:sparql)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query-xml</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL SELECT or ASK query to an endpoint and returns the query response as SPARQL XML format element.
 If the endpoint fails to deliver SPARQL XML result format this function will try to convert the results to XML if possible.
 The default datasource for SPARQL will be used.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/rdf-sparql-XMLres/" target="_blank">SPARQL Query Results XML Format</a></p>
</xqdoc:description><xqdoc:param>$query A SPARQL SELECT or ASK query as string.</xqdoc:param><xqdoc:return>The query result in SPARQL XML format.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query-xml</xqdoc:name><xqdoc:signature>declare function sparql:query-xml($query as string) as element(s:sparql)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(s:sparql)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query-xml</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/rdf-syntax-grammar" target="_blank">RDF/XML Syntax Specification</a></p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object will be ignored. "application/rdf+xml" will be requested as result format. </li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$config The name of the credentials to use as string or a config object as described in the module description.</xqdoc:param><xqdoc:param>$query A SPARQL CONSTRUCT or DESCRIBE query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The query result as RDF XML element.</xqdoc:return><xqdoc:error>sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error><xqdoc:error>sparql:ERROR if any http or endpoint error occurs</xqdoc:error><xqdoc:error>sparql:INVALID-PARAMETER invalid option specification</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error></xqdoc:comment><xqdoc:name>sparql:query-rdf</xqdoc:name><xqdoc:signature>declare function sparql:query-rdf($config as item()?, $query as string, $options as object()?) as element(rdf:RDF)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(rdf:RDF)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>check-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>parse-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate-options</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.
 The default datasource for SPARQL will be used.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/rdf-syntax-grammar" target="_blank">RDF/XML Syntax Specification</a></p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object will be ignored. "application/rdf+xml" will be requested as result format. </li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL CONSTRUCT or DESCRIBE query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The query result as RDF XML element.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query-rdf</xqdoc:name><xqdoc:signature>declare function sparql:query-rdf($query as string, $options as object()?) as element(rdf:RDF)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(rdf:RDF)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query-rdf</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL CONSTRUCT or DESCRIBE query to an endpoint and returns the query response as RDF.
 The default datasource for SPARQL will be used.
 </p>
 <p>Link to the specification of the result format at W3C: <a href="http://www.w3.org/TR/rdf-syntax-grammar" target="_blank">RDF/XML Syntax Specification</a></p>
</xqdoc:description><xqdoc:param>$query A SPARQL CONSTRUCT or DESCRIBE query as string.</xqdoc:param><xqdoc:return>The query result as RDF XML element.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:query-rdf</xqdoc:name><xqdoc:signature>declare function sparql:query-rdf($query as string) as element(rdf:RDF)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(rdf:RDF)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>query-rdf</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.
 </p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. However this function will try to extract only the boolean answer from the result.</li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$config The name of the credentials to use as string or a config object as described in the module description.</xqdoc:param><xqdoc:param>$query A SPARQL ASK query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The boolean ASK query result.</xqdoc:return><xqdoc:error>sparql:INVALID-RESPONSE-TYPE if the response format cannot be handled by this function</xqdoc:error><xqdoc:error>sparql:ERROR if any http or endpoint error occurs</xqdoc:error><xqdoc:error>sparql:INVALID-PARAMETER invalid option specification</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error></xqdoc:comment><xqdoc:name>sparql:ask</xqdoc:name><xqdoc:signature>declare function sparql:ask($config as item()?, $query as string, $options as object()?) as xs:boolean</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>check-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>parse-result</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate-options</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>boolean</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>contains</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.
 The default datasource for SPARQL will be used.
 </p>
 <p>
   <ul>
    <li>The <tt>default-graph-uri</tt> and <tt>named-graph-uri</tt> properties of the options object may be used to pass default graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. GET will be used as default.</li>
    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. However this function will try to extract only the boolean answer from the result.</li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL ASK query as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The boolean ASK query result.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:ask</xqdoc:name><xqdoc:signature>declare function sparql:ask($query as string, $options as object()?) as xs:boolean</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>ask</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL ASK query to an endpoint and returns the result as boolean value.
 The default datasource for SPARQL will be used.
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL ASK query as string.</xqdoc:param><xqdoc:return>The boolean ASK query result.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:ask</xqdoc:name><xqdoc:signature>declare function sparql:ask($query as string) as xs:boolean</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>ask</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.
 </p>
 <p>
   <ul>
    <li>The <tt>using-graph-uri</tt> and <tt>using-named-graph-uri</tt> properties of the options object may be used to pass graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. POST-URLENCODED will be used as default.</li>
    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$config The name of the credentials to use as string or a config object as described in the module description.</xqdoc:param><xqdoc:param>$query A SPARQL update statement as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The endpoints response. This function returns the plain response object from the http-client.</xqdoc:return><xqdoc:error>sparql:INVALID-PARAMETER invalid option specification</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-NOT-FOUND credential information not found</xqdoc:error><xqdoc:error>sparql:CREDENTIALS-INVALID credential information not valid</xqdoc:error></xqdoc:comment><xqdoc:name>sparql:update</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function sparql:update($config as item()?, $update-statement as string, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>update-statement</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate-options-update</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.
 The default datasource for SPARQL will be used.
 </p>
 <p>
   <ul>
    <li>The <tt>using-graph-uri</tt> and <tt>using-named-graph-uri</tt> properties of the options object may be used to pass graph URIs or named graph URIs to the endpoint.</li>
    <li>The <tt>method</tt> property of the options object may be used to set the request method to be used. POST-URLENCODED will be used as default.</li>
    <li>The <tt>format</tt> property of the options object may be used to request a specific result format. XML will be used as default. However, note that this function does not interpret the result.</li>
   </ul>
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL update statement as string.</xqdoc:param><xqdoc:param>$options An optional options object as described in the module description.</xqdoc:param><xqdoc:return>The endpoints response. This function returns the plain response object from the http-client.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:update</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function sparql:update($update-statement as string, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>update-statement</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>update</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>
 This function sends a SPARQL update statement to an endpoint and directly returns the corresponding HTTP response.
 The default datasource for SPARQL will be used.
 </p>
</xqdoc:description><xqdoc:param>$query A SPARQL update statement as string.</xqdoc:param><xqdoc:return>The endpoints response. This function returns the plain response object from the http-client.</xqdoc:return></xqdoc:comment><xqdoc:name>sparql:update</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function sparql:update($update-statement as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>update-statement</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>update</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:get-config</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:get-config($config as item()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate-config</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="6"><xqdoc:name>sparql:create-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:create-request($config as item()?, $query as string, $request-method as string, $result-format as string, $is-update as boolean, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>request-method</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>result-format</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>is-update</xqdoc:name><xqdoc:type>boolean</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>get-config</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>encode-for-uri</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>project</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:parse-result</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:parse-result($response as object()) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>parse-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>parse-xml</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:check-result</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:check-result($response as object()) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:xml-to-json</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:xml-to-json($xml-result as element(*)) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>xml-result</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>boolean</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>local-name</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:json-to-xml</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:json-to-xml($json-result as object()) as element(*)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>json-result</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(*)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>members</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:validate-options</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:validate-options($options as object()?) as object()?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">object()?</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:validate-options-update</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:validate-options-update($options as object()?) as object()?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">object()?</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>sparql:validate-config</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:validate-config($config as object()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>config</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/sparql</xqdoc:uri><xqdoc:name>validate</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>sparql:validate</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function sparql:validate($obj as object(), $schema as object()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>obj</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>schema</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>ends-with</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>replace</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>