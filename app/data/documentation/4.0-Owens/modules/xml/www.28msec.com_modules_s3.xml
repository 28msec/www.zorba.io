<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-02-17T14:42:36.342765+02:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3</xqdoc:name><xqdoc:comment><xqdoc:description> <p>This module provides functionality for managing S3 buckets and object.</p>
 <p>It is not possible to access buckets whose names are not DNS-compliant. For
 instance a bucket name which contains uppercase letters or is longer than 63
 characters is not DNS-compliant. For additional details on bucket naming
 conventions refer to
 <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">
 Bucket Restrictions and Limitations</a>.</p>
 <h2>Authentication</h2>
 <p>For each functionality two methods are provided:
 <ul>
   <li>one which allows to specify the credentials to use, by means of the
   optional $credentials parameter (named). If the parameter is not specified,
   the default credentials in the "S3" category will be used. If the parameter
   is specified it must be either a string or an object. If it is a string it
   will be interpreted as the name of a credentials in the "S3" category. If
   it is an object it must have the following structure:
   <ul>
     <li>accessKey: the AWS access key to use (string, mandatory).</li>
     <li>secretKey: the AWS secret key to use (string, mandatory).</li>
     <li>useHttps: whether to use secure HTTPS connections or not.
     (boolean, optional). The default is <code>false</code></li>
     <li>defaultBucket: the default bucket name (string, optional).</li>
   </ul>
   </li>
   <li>one which does not allow to specify which credentials to use.
   In this case the default credentials in the "S3" category will be used.</li>
 </ul>
 </p>
 <h2 id="determinism">Important Notice Regarding Function Determinism</h2>
 <p>The non side-effecting functions:
 <ul>
   <li><a href="#list-buckets-0">list-buckets#0</a></li>
   <li><a href="#list-buckets-1">list-buckets#1</a></li>
   <li><a href="#list-bucket-0">list-bucket#0</a></li>
   <li><a href="#list-bucket-1">list-bucket#1</a></li>
   <li><a href="#list-bucket-2">list-bucket#2</a></li>
   <li><a href="#list-bucket-3">list-bucket#3</a></li>
   <li><a href="#list-bucket-versions-0">list-bucket-versions#0</a></li>
   <li><a href="#list-bucket-versions-1">list-bucket-versions#1</a></li>
   <li><a href="#list-bucket-versions-2">list-bucket-versions#2</a></li>
   <li><a href="#list-bucket-versions-3">list-bucket-versions#3</a></li>
   <li><a href="#read-text-1">read-text#1</a></li>
   <li><a href="#read-text-2">read-text#2</a></li>
   <li><a href="#read-binary-1">read-binary#1</a></li>
   <li><a href="#read-binary-2">read-binary#2</a></li>
   <li><a href="#read-object-1">read-object#1</a></li>
   <li><a href="#read-object-2">read-object#2</a></li>
   <li><a href="#object-metadata-1">object-metadata#1</a></li>
   <li><a href="#object-metadata-2">object-metadata#2</a></li>
   <li><a href="#object-torrent-1">object-torrent#1</a></li>
   <li><a href="#object-torrent-2">object-torrent#2</a></li>
   <li><a href="#object-permissions-1">object-permissions#1</a></li>
   <li><a href="#object-permissions-2">object-permissions#2</a></li>
 </ul>
 are declared deterministic, which means that their results could be cached
 when invoked multiple times with the same arguments in the same query execution.</p>
 <p>To not use cached results you can use the following alternative functions:
 <ul>
   <li><a href="#list-buckets-nondeterministic-0">list-buckets-nondeterministic#0</a></li>
   <li><a href="#list-buckets-nondeterministic-1">list-buckets-nondeterministic#1</a></li>
   <li><a href="#list-bucket-nondeterministic-0">list-bucket-nondeterministic#0</a></li>
   <li><a href="#list-bucket-nondeterministic-1">list-bucket-nondeterministic#1</a></li>
   <li><a href="#list-bucket-nondeterministic-2">list-bucket-nondeterministic#2</a></li>
   <li><a href="#list-bucket-nondeterministic-3">list-bucket-nondeterministic#3</a></li>
   <li><a href="#list-bucket-versions-nondeterministic-0">list-bucket-versions-nondeterministic#0</a></li>
   <li><a href="#list-bucket-versions-nondeterministic-1">list-bucket-versions-nondeterministic#1</a></li>
   <li><a href="#list-bucket-versions-nondeterministic-2">list-bucket-versions-nondeterministic#2</a></li>
   <li><a href="#list-bucket-versions-nondeterministic-3">list-bucket-versions-nondeterministic#3</a></li>
   <li><a href="#read-text-nondeterministic-1">read-text-nondeterministic#1</a></li>
   <li><a href="#read-text-nondeterministic-2">read-text-nondeterministic#2</a></li>
   <li><a href="#read-binary-nondeterministic-1">read-binary-nondeterministic#1</a></li>
   <li><a href="#read-binary-nondeterministic-2">read-binary-nondeterministic#2</a></li>
   <li><a href="#read-object-nondeterministic-1">read-object-nondeterministic#1</a></li>
   <li><a href="#read-object-nondeterministic-2">read-object-nondeterministic#2</a></li>
   <li><a href="#object-metadata-nondeterministic-1">object-metadata-nondeterministic#1</a></li>
   <li><a href="#object-metadata-nondeterministic-2">object-metadata-nondeterministic#2</a></li>
   <li><a href="#object-torrent-nondeterministic-1">object-torrent-nondeterministic#1</a></li>
   <li><a href="#object-torrent-nondeterministic-2">object-torrent-nondeterministic#2</a></li>
   <li><a href="#object-permissions-nondeterministic-1">object-permissions-nondeterministic#1</a></li>
   <li><a href="#object-permissions-nondeterministic-2">object-permissions-nondeterministic#2</a></li>
 </ul>
 which have been declared as being non deterministic.</p>
</xqdoc:description><xqdoc:author>Alexander Kreutz</xqdoc:author><xqdoc:author>Federico Cavalieri</xqdoc:author><xqdoc:custom tag="language">jsoniq</xqdoc:custom><xqdoc:custom tag="version">1.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="http://zorba.io/annotations" isSchema="false"/><xqdoc:namespace prefix="credentials" uri="http://www.28msec.com/modules/credentials" isSchema="false"/><xqdoc:namespace prefix="err" uri="http://www.w3.org/2005/xqt-errors" isSchema="false"/><xqdoc:namespace prefix="hmac" uri="http://zorba.io/modules/hmac" isSchema="false"/><xqdoc:namespace prefix="http" uri="http://zorba.io/modules/http-client" isSchema="false"/><xqdoc:namespace prefix="jerr" uri="http://jsoniq.org/errors" isSchema="false"/><xqdoc:namespace prefix="s3" uri="http://www.28msec.com/modules/s3" isSchema="false"/><xqdoc:namespace prefix="s3s" uri="http://s3.amazonaws.com/doc/2006-03-01/" isSchema="true"/><xqdoc:namespace prefix="sleep" uri="http://zorba.io/modules/sleep" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="schema"><xqdoc:uri>http://s3.amazonaws.com/doc/2006-03-01/</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://zorba.io/modules/hmac</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://zorba.io/modules/sleep</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables><xqdoc:variable><xqdoc:uri>s3:ACL-GRANT-PRIVATE</xqdoc:uri><xqdoc:comment><xqdoc:description> The private canned ACL. It is applicable to buckets and objects.
 Owner gets FULL_CONTROL. No one else has access rights.
</xqdoc:description></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>s3:ACL-GRANT-PUBLIC-READ</xqdoc:uri><xqdoc:comment><xqdoc:description> The public-read canned ACL. Applicable to buckets and objects.
 Owner gets FULL_CONTROL. The AllUsers group gets READ access.
</xqdoc:description></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>s3:ACL-GRANT-PUBLIC-READ-WRITE</xqdoc:uri><xqdoc:comment><xqdoc:description> The public-read-write canned ACL. Applicable to buckets and objects.
 Owner gets FULL_CONTROL. The AllUsers group gets READ and WRITE access.
 Granting this on a bucket is generally not recommended.
</xqdoc:description></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>s3:ACL-GRANT-AUTHENTICATED-READ</xqdoc:uri><xqdoc:comment><xqdoc:description> The autenticated-read canned ACL. Applicable to buckets and objects.
 Owner gets FULL_CONTROL. The AuthenticatedUsers group gets READ access.
</xqdoc:description></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>s3:ACL-GRANT-BUCKET-OWNER-READ</xqdoc:uri><xqdoc:comment><xqdoc:description> The grant-bucket-owner-read canned ACL. Applicable to objects.
 Object owner gets FULL_CONTROL. Bucket owner gets READ access.
 If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.
</xqdoc:description></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</xqdoc:uri><xqdoc:comment><xqdoc:description> The grant-bucket-owner-full-control canned ACL. Applicable to objects.
 Both the object owner and the bucket owner get FULL_CONTROL over the object.
 If you specify this canned ACL when creating a bucket, Amazon S3 ignores it.
</xqdoc:description></xqdoc:comment></xqdoc:variable><xqdoc:variable><xqdoc:uri>s3:CREDENTIALS-CATEGORY</xqdoc:uri><xqdoc:comment><xqdoc:description> The S3 credentials category name.
</xqdoc:description></xqdoc:comment><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations></xqdoc:variable><xqdoc:variable><xqdoc:uri>s3:RETRY-OPTIONS</xqdoc:uri><xqdoc:comment><xqdoc:description> The S3 HTTP retry options.
</xqdoc:description></xqdoc:comment><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>true</xqdoc:name></xqdoc:invoked><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations></xqdoc:variable></xqdoc:variables><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Creates a bucket using the default S3 credentials. The bucket owner will
 be the account of the default S3 credentials.</p>
 <p>The bucket is created with the S3 default bucket settings. Specifically,
 it is created in the US Standard region and the default credentials
 account becomes its owner. The bucket ACL permissions are set to "private",
 that is, the owner gets FULL_CONTROL, whereas no one else has access rights.
 The bucket name must comply with the following rules:
 <ul>
   <li>bucket names must be no more than 255 characters long.</li>
   <li>bucket names must be a combination of uppercase letters, lowercase letters,
   numbers, periods (.), dashes (-) and underscores (_).</li>
 </ul>
 For more details, refer to the
 <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">
 Amazon S3 Bucket Restrictions</a> page.
 </p>
 <p>If the specified bucket already exists in the US Standard region and has
 the same owner, its permissions settings are reset and its contents are
 preserved. Otherwise, if the specified bucket already exists an s3:REQUEST
 error is raised.</p>
 <p>Example:
 <pre>
 s3:create-bucket("28msec");
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$bucket The bucket name.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:create-bucket</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:create-bucket($bucket as string) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-bucket</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Creates a bucket using the specified S3 credentials. The bucket owner will
 be the account of the specified S3 credentials.</p>
 <p>The bucket is created with the S3 default bucket settings. Specifically,
 it is created in the US Standard region and the specified credentials
 account becomes its owner. The bucket ACL permissions are set to "private",
 that is, the owner gets FULL_CONTROL, whereas no one else has access rights.
 The bucket name must comply with the following rules:
 <ul>
   <li>bucket names must be no more than 255 characters long.</li>
   <li>bucket names must be a combination of uppercase letters, lowercase letters,
   numbers, periods (.), dashes (-) and underscores (_).</li>
 </ul>
 For more details, refer to the
 <a href="http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html">
 Amazon S3 Bucket Restrictions</a> page.
 </p>
 <p>If the specified bucket already exists in the US Standard region and has
 the same owner, its permissions settings are reset and its contents are
 preserved. Otherwise, if the specified bucket already exists an s3:REQUEST
 error is raised.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$bucket The bucket name.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:create-bucket</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:create-bucket($credentials as item()?, $bucket as string) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Deletes a bucket using the default S3 credentials. The bucket must be owned
 by the account of the default S3 credentials.</p>
 <p>This operation will fail if the deleted bucket is not empty. All objects,
 object versions, and delete markers have to be deleted beforehand using this
 function.</p>
 <p>Example:
 <pre>
 s3:delete-bucket("28msec");
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$bucket The bucket name.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:delete-bucket</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:delete-bucket($bucket as string) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>delete-bucket</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Deletes a bucket using the specified S3 credentials. The bucket must be owned
 by the account of the specified S3 credentials.</p>
 <p>This operation will fail if the deleted bucket is not empty. All objects,
 object versions, and delete markers have to be deleted beforehand using this
 function.</p>
 <p>Example:
 <pre>
 s3:delete-bucket("credentials", "28msec");
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$bucket The bucket name.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:delete-bucket</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:delete-bucket($credentials as item()?, $bucket as string) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Lists all buckets owned by the account of the default S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 s3:list-buckets()
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "owner" :
   {
     "id": "dfe08489302934392afe39239fe953039d9e2af0c94",
     "displayName": "28msec"
   },
   "buckets" :
   [
     {
       "name": "28msec",
       "creationDate": "2010-11-03T17:42:45.000Z",
     }
   ]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>owner: an object which specifies the owner of the bucket (object,
   mandatory). It has the following fields:
   <ul>
     <li>id: the user identifier of the bucket owner (string, mandatory).</li>
     <li>displayName: the screen name of the bucket owner (string, mandatory).</li>
   </ul>
   </li>
   <li>buckets: an array which contains an object for each owned bucket
   (array, mandatory). Each object contains the following fields:
   <ul>
     <li>name: the bucket name (string, mandatory).</li>
     <li>creationDate: the bucket creation date. (dateTime, mandatory).</li>
   </ul>
   </li>
 </ul>
 </p>
</xqdoc:description><xqdoc:return>the owned buckets list</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-buckets</xqdoc:name><xqdoc:signature>declare function s3:list-buckets() as object()</xqdoc:signature><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-buckets</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Lists all buckets owned by the account of the default S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#list-buckets-0">list-buckets#0</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:return>the owned buckets list</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-buckets-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-buckets-nondeterministic() as object()</xqdoc:signature><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-buckets-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Lists all buckets owned by the account of the specified S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 s3:list-buckets("credentials")
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "owner" :
   {
     "id": "dfe08489302934392afe39239fe953039d9e2af0c94",
     "displayName": "28msec"
   },
   "buckets" :
   [
     {
       "name": "28msec",
       "creationDate": "2010-11-03T17:42:45.000Z",
     }
   ]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>owner: an object which specifies the owner of the bucket (object,
   mandatory). It has the following fields:
   <ul>
     <li>id: the user identifier of the bucket owner (string, mandatory).</li>
     <li>displayName: the screen name of the bucket owner (string, mandatory).</li>
   </ul>
   </li>
   <li>buckets: an array which contains an object for each owned bucket
   (array, mandatory). Each object contains the following fields:
   <ul>
     <li>name: the bucket name (string, mandatory).</li>
     <li>creationDate: the bucket creation date. (dateTime, mandatory).</li>
   </ul>
   </li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:return>the owned buckets list</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-buckets</xqdoc:name><xqdoc:signature>declare function s3:list-buckets($credentials as item()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Lists all buckets owned by the account of the specified S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#list-buckets-1">list-buckets#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:return>the owned buckets list</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-buckets-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-buckets-nondeterministic($credentials as item()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Lists the objects in the default bucket of the default S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 s3:list-bucket("28msec")
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "name": "28msec",
   "prefix": "",
   "marker" : "",
   "nextMarker": "marker",
   "maxKeys": 1,
   "delimiter": "",
   "isTruncated": true,
   "contents":
   [
     {
       "key": "image.jpg",
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD"
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>
   <li>nextMarker: when the response is truncated, you can use the key name
   in this field as marker in the subsequent request to get next set of objects.
   Amazon S3 lists objects in alphabetical order. This field is returned only
   if you have specified the delimiter request parameter. If the response does
   not include the nextMaker field and it is truncated, you can use the value
   of the last Key in the response as the marker in the subsequent request to
   get the next set of object keys. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>contents: an array of objects listing the bucket content  (array, mandatory).
   The fields of each contained object have the following meaning:
   <ul>
     <li>key: the object key (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
 </ul>
 </p>
</xqdoc:description><xqdoc:return>the list of objects in the default bucket of the default S3 credentials</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket</xqdoc:name><xqdoc:signature>declare function s3:list-bucket() as object()</xqdoc:signature><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Lists the objects in the default bucket of the default S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-0">list-bucket#0</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:return>the list of objects in the default bucket of the default S3 credentials</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-nondeterministic() as object()</xqdoc:signature><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Lists the objects in a bucket using the default S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 s3:list-bucket("28msec")
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "name": "28msec",
   "prefix": "",
   "marker" : "",
   "nextMarker": "marker",
   "maxKeys": 1,
   "delimiter": "",
   "isTruncated": true,
   "contents":
   [
     {
       "key": "image.jpg",
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD"
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ]
 }
 </pre>
 The meanings of the fields in the return object are the following:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>
   <li>nextMarker: when the response is truncated, you can use the key name
   in this field as marker in the subsequent request to get next set of objects.
   Amazon S3 lists objects in alphabetical order. This field is returned only
   if you have specified the delimiter request parameter. If the response does
   not include the nextMaker field and it is truncated, you can use the value
   of the last Key in the response as the marker in the subsequent request to
   get the next set of object keys. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>contents: an array of objects listing the bucket content  (array, mandatory).
   The fields of each contained object have the following meaning:
   <ul>
     <li>key: the object key (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</xqdoc:param><xqdoc:return>the list of the objects in the specified bucket.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket</xqdoc:name><xqdoc:signature>declare function s3:list-bucket($bucket as string?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Lists the objects in a bucket using the default S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-1">list-bucket#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</xqdoc:param><xqdoc:return>the list of the objects in the specified bucket.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-nondeterministic($bucket as string?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Lists the objects in a bucket using the default S3 credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 let $options :=
 {
   "delimiter": "/",
   "marker": "",
   "maxKeys": 1,
   "prefix": ""
 }
 return s3:list-bucket("credentials", "28msec", $options)
 </pre>
 </p>
 <p>The options object must have the following structure:
 <ul>
   <li>delimiter: the delimiter marks where the listed results stop. For example,
       a delimiter / lists all objects starting with $prefix plus arbitrary
       characters but not / (string, optional). Default is the empty string,
       that is, all objects are listed.</li>
   <li>marker: specifies a key as starting point; following keys (lexicographically
       greater than the marker) in alphabetical order are listed (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys
       can be fetched, the result contains <IsTruncated>true</IsTruncated>
       (integer, optional). Default is 1000.</li>
   <li>prefix: only keys starting with the prefix are returned (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
 </ul>
 </p>
 <p>Example return object:
 <pre>
 {
   "name": "bucket",
   "prefix": "",
   "marker" : "",
   "nextMarker": "marker",
   "maxKeys": 1,
   "delimiter": "/",
   "isTruncated": true,
   "contents":
   [
     {
       "key": "image.jpg",
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD"
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ],
   "commonPrefixes": ["photos/"]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>
   <li>nextMarker: when the response is truncated, you can use the key name
   in this field as marker in the subsequent request to get next set of objects.
   Amazon S3 lists objects in alphabetical order. This field is returned only
   if you have specified the delimiter request parameter. If the response does
   not include the nextMaker field and it is truncated, you can use the value
   of the last Key in the response as the marker in the subsequent request to
   get the next set of object keys. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>contents: an array of objects listing the bucket content  (array, mandatory).
   The fields of each contained object have the following meaning:
   <ul>
     <li>key: the object key (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
   <li>commonPrefixes: an array of strings which contains the list of the common
   prefixes. It can be present only when the delimiter request parameter is
   specified (array, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket</xqdoc:name><xqdoc:signature>declare function s3:list-bucket($bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Lists the objects in a bucket using the default S3 credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-2">list-bucket#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default S3 credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-nondeterministic($bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Lists the objects in a bucket using the specified credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 let $options :=
 {
   "delimiter": "/",
   "marker": "",
   "maxKeys": 1,
   "prefix": ""
 }
 return s3:list-bucket("credentials", "28msec", $options)
 </pre>
 </p>
 <p>The options object must have the following structure:
 <ul>
   <li>delimiter: the delimiter marks where the listed results stop. For example,
       a delimiter / lists all objects starting with $prefix plus arbitrary
       characters but not / (string, optional). Default is the empty string,
       that is, all objects are listed.</li>
   <li>marker: specifies a key as starting point; following keys (lexicographically
       greater than the marker) in alphabetical order are listed (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys
       can be fetched, the result contains <IsTruncated>true</IsTruncated>
       (integer, optional). Default is 1000.</li>
   <li>prefix: only keys starting with the prefix are returned (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
 </ul>
 </p>
 <p>Example result:
 <pre>
 {
   "name": "bucket",
   "prefix": "",
   "marker" : "",
   "nextMarker": "marker",
   "maxKeys": 1,
   "delimiter": "/",
   "isTruncated": true,
   "contents":
   [
     {
       "key": "image.jpg",
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD"
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ],
   "commonPrefixes": ["photos/"]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>marker: indicates where in the bucket listing begins (string, mandatory).</li>
   <li>nextMarker: when the response is truncated, you can use the key name
   in this field as marker in the subsequent request to get next set of objects.
   Amazon S3 lists objects in alphabetical order. This field is returned only
   if you have specified the delimiter request parameter. If the response does
   not include the nextMaker field and it is truncated, you can use the value
   of the last Key in the response as the marker in the subsequent request to
   get the next set of object keys. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>contents: an array of objects listing the bucket content  (array, mandatory).
   The fields of each contained object have the following meaning:
   <ul>
     <li>key: the object key (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
   <li>commonPrefixes: an array of strings which contains the list of the common
   prefixes. It can be present only when the delimiter request parameter is
   specified (array, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket</xqdoc:name><xqdoc:signature>declare function s3:list-bucket($credentials as item()?, $bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Lists the objects in a bucket using the specified credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-3">list-bucket#3</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-nondeterministic($credentials as item()?, $bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in the default bucket of the default S3
 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 s3:list-bucket-versions()
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "name": "bucket",
   "prefix": "",
   "keyMarker" : "image.jpg",
   "versionIdMarker" : "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
   "nextKeyMarker": "marker",
   "nextVersionIdMarker": "UIORUnfndfhnw89493jJFJ",
   "maxKeys": 1,
   "delimiter": "/",
   "isTruncated": true,
   "revisions":
   [
     {
       "kind": "Version",
       "key": "image.jpg",
       "versionId": "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
       "isLatest": false,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     },
     {
       "kind": "DeleteMarker",
       "key": "image.jpg",
       "versionId": "03jpff543dhffds434rfdsFDN943fdsFkdmqnh892",
       "isLatest": true,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ],
   "commonPrefixes": ["photos/"]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>keyMarker: indicates from which key in the listing begins
   (string, mandatory).</li>
   <li>versionMarker: indicates from which version  the listing begins
   (string, optional).</li>
   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,
   nextKeyMarker specifies the first key not returned that satisfies the search
   criteria. Use this value for the keyMarker request parameter in a subsequent
   request. (string, optional)</li>
   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,
   nextVersionIdMarker specifies the first object version not returned that
   satisfies the search criteria. Use this value for the versionMarker request
   parameter in a subsequent request. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>revisions: an array of objects listing the bucket object versions
   (array, mandatory). The fields of each contained object have the following
   meaning:
   <ul>
     <li>kind: the revision kind. One of "Version" or "DeleteMarker" (string,
     mandatory).</li>
     <li>key: the object key (string, mandatory).</li>
     <li>versionId: the object version id (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory for "Version" objects, not present for
     "DeleteMarker" objects).</li>
     <li>size: the object size in bytes (integer, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
   <li>commonPrefixes: an array of strings which contains the list of the common
   prefixes. It can be present only when the delimiter request parameter is
   specified (array, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:return>the list of the object versions in the default bucket of the default S3 credentials</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions</xqdoc:name><xqdoc:signature>declare function s3:list-bucket-versions() as object()</xqdoc:signature><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in the default bucket of the default S3
 credentials.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-versions-0">list-bucket-versions#0</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:return>the list of the object versions in the default bucket of the default S3 credentials</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no default bucket is present in the default S3 credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-versions-nondeterministic() as object()</xqdoc:signature><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in a bucket using the default S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 s3:list-bucket-versions("28msec")
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "name": "bucket",
   "prefix": "",
   "keyMarker" : "image.jpg",
   "versionIdMarker" : "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
   "nextKeyMarker": "marker",
   "nextVersionIdMarker": "UIORUnfndfhnw89493jJFJ",
   "maxKeys": 1,
   "delimiter": "/",
   "isTruncated": true,
   "revisions":
   [
     {
       "kind": "Version",
       "key": "image.jpg",
       "versionId": "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
       "isLatest": false,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     },
     {
       "kind": "DeleteMarker",
       "key": "image.jpg",
       "versionId": "03jpff543dhffds434rfdsFDN943fdsFkdmqnh892",
       "isLatest": true,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ],
   "commonPrefixes": ["photos/"]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>keyMarker: indicates from which key in the listing begins
   (string, mandatory).</li>
   <li>versionMarker: indicates from which version  the listing begins
   (string, optional).</li>
   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,
   nextKeyMarker specifies the first key not returned that satisfies the search
   criteria. Use this value for the keyMarker request parameter in a subsequent
   request. (string, optional)</li>
   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,
   nextVersionIdMarker specifies the first object version not returned that
   satisfies the search criteria. Use this value for the versionMarker request
   parameter in a subsequent request. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>revisions: an array of objects listing the bucket object versions
   (array, mandatory). The fields of each contained object have the following
   meaning:
   <ul>
     <li>kind: the revision kind. One of "Version" or "DeleteMarker" (string,
     mandatory).</li>
     <li>key: the object key (string, mandatory).</li>
     <li>versionId: the object version id (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory for "Version" objects, not present for
     "DeleteMarker" objects).</li>
     <li>size: the object size in bytes (integer, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
   <li>commonPrefixes: an array of strings which contains the list of the common
   prefixes. It can be present only when the delimiter request parameter is
   specified (array, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</xqdoc:param><xqdoc:return>the list of the object versions in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions</xqdoc:name><xqdoc:signature>declare function s3:list-bucket-versions($bucket as string?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in a bucket using the default S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-versions-1">list-bucket-versions#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</xqdoc:param><xqdoc:return>the list of the object versions in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-versions-nondeterministic($bucket as string?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in a bucket using the default S3 credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 let $options :=
 {
   "delimiter": "/",
   "maxKeys": 2,
   "keyMarker": "image.jpg",
   "versionIdMarker" : "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893"
 }
 return s3:list-bucket-versions("28msec", $options)
 </pre>
 </p>
 <p>The options object must have the following structure:
 <ul>
   <li>delimiter: the delimiter marks where the listed results stop. For example,
       a delimiter / lists all objects starting with $prefix plus arbitrary
       characters but not / (string, optional). Default is the empty string,
       that is, all objects are listed.</li>
   <li>keyMarker: specifies a key as starting point; following keys (lexicographically
       greater than the marker) in alphabetical order are listed (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
   <li>versionMarker: specifies the object version you want starting from;
       following revisions (newer than the marker) are listed (string, optional).
       By default all versions are listed. Empty string is not allowed.</li>
   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys
       can be fetched, the result contains <IsTruncated>true</IsTruncated>
       (integer, optional). Default is 1000.</li>
   <li>prefix: only keys starting with the prefix are returned (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
 </ul>
 </p>
 <p>Example return object:
 <pre>
 {
   "name": "bucket",
   "prefix": "",
   "keyMarker" : "image.jpg",
   "versionIdMarker" : "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
   "nextKeyMarker": "marker",
   "nextVersionIdMarker": "UIORUnfndfhnw89493jJFJ",
   "maxKeys": 1,
   "delimiter": "/",
   "isTruncated": true,
   "revisions":
   [
     {
       "kind": "Version",
       "key": "image.jpg",
       "versionId": "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
       "isLatest": false,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     },
     {
       "kind": "DeleteMarker",
       "key": "image.jpg",
       "versionId": "03jpff543dhffds434rfdsFDN943fdsFkdmqnh892",
       "isLatest": true,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ],
   "commonPrefixes": ["photos/"]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>keyMarker: indicates from which key in the listing begins
   (string, mandatory).</li>
   <li>versionMarker: indicates from which version  the listing begins
   (string, optional).</li>
   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,
   nextKeyMarker specifies the first key not returned that satisfies the search
   criteria. Use this value for the keyMarker request parameter in a subsequent
   request. (string, optional)</li>
   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,
   nextVersionIdMarker specifies the first object version not returned that
   satisfies the search criteria. Use this value for the versionMarker request
   parameter in a subsequent request. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>revisions: an array of objects listing the bucket object versions
   (array, mandatory). The fields of each contained object have the following
   meaning:
   <ul>
     <li>kind: the revision kind. One of "Version" or "DeleteMarker" (string,
     mandatory).</li>
     <li>key: the object key (string, mandatory).</li>
     <li>versionId: the object version id (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory for "Version" objects, not present for
     "DeleteMarker" objects).</li>
     <li>size: the object size in bytes (integer, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
   <li>commonPrefixes: an array of strings which contains the list of the common
   prefixes. It can be present only when the delimiter request parameter is
   specified (array, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object versions in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions</xqdoc:name><xqdoc:signature>declare function s3:list-bucket-versions($bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in a bucket using the default S3 credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-versions-2">list-bucket-versions#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the default credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object versions in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the default credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-versions-nondeterministic($bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in a bucket using the specified credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Example:
 <pre>
 let $options :=
 {
   "delimiter": "/",
   "maxKeys": 2,
   "keyMarker": "image.jpg",
   "versionIdMarker": "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893"
 }
 return s3:list-bucket-versions("credentials", "28msec", $options)
 </pre>
 </p>
 <p>The options object must have the following structure:
 <ul>
   <li>delimiter: the delimiter marks where the listed results stop. For example,
       a delimiter / lists all objects starting with $prefix plus arbitrary
       characters but not / (string, optional). Default is the empty string,
       that is, all objects are listed.</li>
   <li>keyMarker: specifies a key as starting point; following keys (lexicographically
       greater than the marker) in alphabetical order are listed (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
   <li>versionMarker: specifies the object version you want starting from;
       following revisions (newer than the marker) are listed (string, optional).
       By default all versions are listed. Empty string is not allowed.</li>
   <li>maxKeys: the maximum number of keys returned. If more keys than maxKeys
       can be fetched, the result contains <IsTruncated>true</IsTruncated>
       (integer, optional). Default is 1000.</li>
   <li>prefix: only keys starting with the prefix are returned (string, optional).
       Default is the empty string, that is, all objects are listed.</li>
 </ul>
 </p>
 <p>Example return object:
 <pre>
 {
   "name": "bucket",
   "prefix": "",
   "keyMarker" : "image.jpg",
   "VersionIdMarker" : "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
   "nextKeyMarker": "marker",
   "nextVersionIdMarker": "UIORUnfndfhnw89493jJFJ",
   "maxKeys": 1,
   "delimiter": "/",
   "isTruncated": true,
   "revisions":
   [
     {
       "kind": "Version",
       "key": "image.jpg",
       "versionId": "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
       "isLatest": false,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "eTag": "\"fba9dede5f27731c9771645a39863328\"",
       "size": 434234,
       "storageClass": "STANDARD",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     },
     {
       "kind": "DeleteMarker",
       "key": "image.jpg",
       "versionId": "03jpff543dhffds434rfdsFDN943fdsFkdmqnh892",
       "isLatest": true,
       "lastModified": "2009-10-12T17:50:30.000Z",
       "owner":
       {
         "id": "75aa57f09aa0c8caeab4f8c24e99d10f8e7faeebf76c078efc7c6caea54ba06a"
         "displayName": "mtd@amazon.com"
       }
     }
   ],
   "commonPrefixes": ["photos/"]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>name: the bucket name (string, mandatory).</li>
   <li>prefix: the used prefix (string, mandatory).</li>
   <li>keyMarker: indicates from which key in the listing begins
   (string, mandatory).</li>
   <li>versionMarker: indicates from which version  the listing begins
   (string, optional).</li>
   <li>nextKeyMarker: when the number of responses exceeds the value of maxKeys,
   nextKeyMarker specifies the first key not returned that satisfies the search
   criteria. Use this value for the keyMarker request parameter in a subsequent
   request. (string, optional)</li>
   <li>nextVersionMarker: when the number of responses exceeds the value of maxKeys,
   nextVersionIdMarker specifies the first object version not returned that
   satisfies the search criteria. Use this value for the versionMarker request
   parameter in a subsequent request. (string, optional)</li>
   <li>maxKeys: the maximum number of keys returned in the response body
   (integer, mandatory).</li>
   <li>delimiter: the used delimiter (string, optional).</li>
   <li>isTruncated: whether or not all of the results were returned. All of the
   results may not be returned if the number of results exceeds that specified
   by the maxKeys request parameter (boolean, mandatory).</li>
   <li>revisions: an array of objects listing the bucket object versions
   (array, mandatory). The fields of each contained object have the following
   meaning:
   <ul>
     <li>kind: the revision kind. One of "Version" or "DeleteMarker" (string,
     mandatory).</li>
     <li>key: the object key (string, mandatory).</li>
     <li>versionId: the object version id (string, mandatory).</li>
     <li>lastModified: the object last modification date (dateTime, mandatory).</li>
     <li>eTag: the entity tag is a hash of the object. The eTag only reflects
     changes to the contents of an object, not its metadata. The eTag is determined
     when an object is created. For objects created by the PUT Object operation
     and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
     string representing the MD5 digest of the object data. For other objects,
     the eTag may or may not be an MD5 digest of the object data. If the eTag is
     not an MD5 digest of the object data, it will contain one or more non-hexadecimal
     characters and/or will consist of less than 32 or more than 32 hexadecimal
     digits.(string, mandatory for "Version" objects, not present for
     "DeleteMarker" objects).</li>
     <li>size: the object size in bytes (integer, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>storageClass: the object storage class. One of "STANDARD",
     "REDUCED_REDUNDANCY" or "GLACIER" (string, mandatory for "Version" objects,
     not present for "DeleteMarker" objects).</li>
     <li>owner: an object which specifies the owner of the object (object,
     optional). It has the following fields:
     <ul>
       <li>id: the user identifier of the object owner (string, mandatory).</li>
       <li>displayName: the screen name of the object owner (string, mandatory).</li>
     </ul>
     </li>
   </ul>
   </li>
   <li>commonPrefixes: an array of strings which contains the list of the common
   prefixes. It can be present only when the delimiter request parameter is
   specified (array, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions</xqdoc:name><xqdoc:signature>declare function s3:list-bucket-versions($credentials as item()?, $bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Lists the objects versions in a bucket using the specified credentials.
 This method allows the specification of additional listing options.</p>
 <p>This function has the same semantics as
 <a href="#list-bucket-versions-3">list-bucket-versions#3</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$bucket The bucket to list. If the empty sequence is given, the default bucket of the specified credentials will be listed.</xqdoc:param><xqdoc:param>$options The listing options.</xqdoc:param><xqdoc:return>the list of the object in the specified bucket</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:list-bucket-versions-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:list-bucket-versions-nondeterministic($credentials as item()?, $bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>list-bucket-versions-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Deletes an object or a specific object version from a bucket using the
 default S3 credentials.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If not specified, the
   null version of the object is removed, if there is one. To remove a specific
   version, this field must be specified.</li>
 </ul>
 </p>
 <p>If the bucket is versioned a delete marker is inserted for the object. If
 mfa-deletion is enabled you will not be able to delete an object through
 this method. If the specified bucket exists, and the specified object does not
 exist no errors will be raised.</p>
 <p>Example:
 <pre>
 s3:delete-object(
 {
   "key": "test.xml",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 });
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to delete.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:delete-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:delete-object($s3-object as item()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>delete-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Deletes an object or a specific object version from a bucket using the
 specified S3 credentials.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If not specified, the
   null version of the object is removed, if there is one. To remove a specific
   version, this field must be specified.</li>
 </ul>
 </p>
 <p>If the bucket is versioned a delete marker is inserted for the object. If
 mfa-deletion is enabled you will not be able to delete an object through
 this method. If the specified bucket exists, and the specified object does not
 exist no errors will be raised.</p>
 <p>Example:
 <pre>
 s3:delete-object("credentials",
 {
   "key": "test.xml",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 });
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to delete.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:delete-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:delete-object($credentials as item()?, $s3-object as item()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves the textual content of an S3 object using the default S3 credentials.
 The object content is forced to be interpreted as textual, with a UTF-8 charset
 and will be returned as string.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be returned. If specified, only that particular version of
   the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:read-text("credentials", $object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version textual content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-text</xqdoc:name><xqdoc:signature>declare function s3:read-text($s3-object as item()) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves the textual content of an S3 object using the default S3 credentials.
 The object content is forced to be interpreted as textual, with a UTF-8 charset
 and will be returned as string.</p>
 <p>This function has the same semantics as
 <a href="#read-text-1">read-text#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version textual content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-text-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:read-text-nondeterministic($s3-object as item()) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-text-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves the textual content of an S3 object using the specified S3 credentials.
 The object content is forced to be interpreted as textual, with a UTF-8 charset
 and will be returned as string.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be returned. If specified, only that particular version of
   the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:read-text("credentials", $object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version textual content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-text</xqdoc:name><xqdoc:signature>declare function s3:read-text($credentials as item()?, $s3-object as item()) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves the textual content of an S3 object using the specified S3 credentials.
 The object content is forced to be interpreted as textual, with a UTF-8 charset
 and will be returned as string.</p>
 <p>This function has the same semantics as
 <a href="#read-text-2">read-text#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version textual content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-text-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:read-text-nondeterministic($credentials as item()?, $s3-object as item()) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object-nondeterministic</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves the binary content of an S3 object using the default S3 credentials.
 The object content is forced to be interpreted as binaryand will be returned
 as a base64Binary item.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be returned. If specified, only that particular version of
   the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:read-binary($object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version binary content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-binary</xqdoc:name><xqdoc:signature>declare function s3:read-binary($s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-binary</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves the binary content of an S3 object using the default S3 credentials.
 The object content is forced to be interpreted as binaryand will be returned
 as a base64Binary item.</p>
 <p>This function has the same semantics as
 <a href="#read-binary-1">read-binary#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version binary content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-binary-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:read-binary-nondeterministic($s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-binary-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves the binary content of an S3 object using the specified S3 credentials.
 The object content is forced to be interpreted as binaryand will be returned
 as a base64Binary item.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be returned. If specified, only that particular version of
   the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:read-binary("credentials", $object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version binary content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-binary</xqdoc:name><xqdoc:signature>declare function s3:read-binary($credentials as item()?, $s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>base64Binary</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves the binary content of an S3 object using the specified S3 credentials.
 The object content is forced to be interpreted as binaryand will be returned
 as a base64Binary item.</p>
 <p>This function has the same semantics as
 <a href="#read-binary-2">read-binary#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the object or object version binary content.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-binary-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:read-binary-nondeterministic($credentials as item()?, $s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object-nondeterministic</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>base64Binary</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves an S3 object using the default S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be returned. If specified, only that particular version of
   the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:read-object($object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "key": "test.xml",
   "bucket": "28msec",
   "metadata":
   {
     "author": "28msec"
   },
   "missing-metadata" : 1,
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "expiration": "expiry-date=\"Fri, 21 Dec 2012 00:00:00 GMT\", rule-id=\"Rule for testfile.txt\""
   "restore": "x-amz-restore: ongoing-request=\"false\", expiry-date=\"Wed, 07 Nov 2012 00:00:00 GMT\""
   "serverSideEncryption": "AES256",
   "lastModified": "Mon, 15 Oct 2012 21:58:07 GMT",
   "eTag": "1accb31fcf202eba0c0f41fa2f09b4d7",
   "mediaType": "text/plain"
   "length": "28",
   "content: "1234567890123456789012345678"
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, mandatory).</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>missing-metadata: the number of metadata entries that were not returned
   in the metadata object. This can happen if you create metadata using an API
   like SOAP that supports more flexible metadata than the REST API. (integer,
   optional).</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be returned. If specified, only the
   permissions for that particular version of the object will be returned.</li>
   <li>expiration: if the object expiration is configured (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT Bucket lifecycle</a>),
   this field is present. It includes the expiry-date and rule-id key value
   pairs providing object expiration information. The value of rule-id is URL
   encoded.(string, optional).</li>
   <li>restore: if the object is an archived object (an object whose storage
   class is Glacier), the response includes this header if either the archive
   restoration is in progress (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html">POST Object restore</a>),
   or an archive copy is already restored.(string, optional).</li>
   <li>serverSideEncryption: If the object is stored by using server-side
   encryption, the response includes this header with a value of the encryption
   algorithm that was used.(string, optional).</li>
   <li>lastModified: the date in which the object was last modified (dateTime,
   optional).</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. For objects created by the PUT Object operation
   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
   string representing the MD5 digest of the object data. For other objects,
   the eTag may or may not be an MD5 digest of the object data. If the eTag is
   not an MD5 digest of the object data, it will contain one or more non-hexadecimal
   characters and/or will consist of less than 32 or more than 32 hexadecimal
   digits.(string, optional).</li>
   <li>mediaType: the object media-type (string, mandatory).</li>
   <li>length: the object content length (integer, optional).</li>
   <li>content: the object content. (item, optional). The type of this field
   is determined by the media-type returned by the server. If the media-type
   indicates that the body content is textual, then the content has type string,
   base64Binary otherwise. Specifically, the body content is considered textual
   if and only if the MIME-type specified in the media-type is one of:
   <ul>
     <li>"application/json"</li>
     <li>"application/x-javascript"</li>
     <li>"application/xml"</li>
     <li>"application/xml-external-parsed-entity"</li>
   </ul>
   or if the MIME-type starts with "text/" or ends with "+xml".</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-object</xqdoc:name><xqdoc:signature>declare function s3:read-object($s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves an S3 object using the default S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#read-object-1">read-object#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-object-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:read-object-nondeterministic($s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves an S3 object using the specified S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be returned. If specified, only that particular version of
   the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:read-object($object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "key": "test.xml",
   "bucket": "28msec",
   "metadata":
   {
     "author": "28msec"
   },
   "missing-metadata" : 1,
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "expiration": "expiry-date=\"Fri, 21 Dec 2012 00:00:00 GMT\", rule-id=\"Rule for testfile.txt\""
   "restore": "x-amz-restore: ongoing-request=\"false\", expiry-date=\"Wed, 07 Nov 2012 00:00:00 GMT\""
   "serverSideEncryption": "AES256",
   "lastModified": "Mon, 15 Oct 2012 21:58:07 GMT",
   "eTag": "1accb31fcf202eba0c0f41fa2f09b4d7",
   "mediaType": "text/plain"
   "length": "28",
   "content: "1234567890123456789012345678"
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, mandatory).</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>missing-metadata: the number of metadata entries that were not returned
   in the metadata object. This can happen if you create metadata using an API
   like SOAP that supports more flexible metadata than the REST API. (integer,
   optional).</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be returned. If specified, only the
   permissions for that particular version of the object will be returned.</li>
   <li>expiration: if the object expiration is configured (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT Bucket lifecycle</a>),
   this field is present. It includes the expiry-date and rule-id key value
   pairs providing object expiration information. The value of rule-id is URL
   encoded.(string, optional).</li>
   <li>restore: if the object is an archived object (an object whose storage
   class is Glacier), the response includes this header if either the archive
   restoration is in progress (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html">POST Object restore</a>),
   or an archive copy is already restored.(string, optional).</li>
   <li>serverSideEncryption: If the object is stored by using server-side
   encryption, the response includes this header with a value of the encryption
   algorithm that was used.(string, optional).</li>
   <li>lastModified: the date in which the object was last modified (dateTime,
   optional).</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. For objects created by the PUT Object operation
   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
   string representing the MD5 digest of the object data. For other objects,
   the eTag may or may not be an MD5 digest of the object data. If the eTag is
   not an MD5 digest of the object data, it will contain one or more non-hexadecimal
   characters and/or will consist of less than 32 or more than 32 hexadecimal
   digits.(string, optional).</li>
   <li>mediaType: the object media-type (string, mandatory).</li>
   <li>length: the object content length (integer, optional).</li>
   <li>content: the object content. (item, optional). The type of this field
   is determined by the media-type returned by the server. If the media-type
   indicates that the body content is textual,then the content has type string,
   base64Binary otherwise. Specifically, the body content is considered textual
   if and only if the MIME-type specified in the media-type is one of:
   <ul>
     <li>"application/json"</li>
     <li>"application/x-javascript"</li>
     <li>"application/xml"</li>
     <li>"application/xml-external-parsed-entity"</li>
   </ul>
   or if the MIME-type starts with "text/" or ends with "+xml".</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-object</xqdoc:name><xqdoc:signature>declare function s3:read-object($credentials as item()?, $s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves an S3 object using the specified S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#read-object-2">read-object#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve.</xqdoc:param><xqdoc:return>the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:read-object-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:read-object-nondeterministic($credentials as item()?, $s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>read-object-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves an object metadata using the default S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the metadata of the
   latest version of the object will be returned. If specified, only the
   metadata of that particular version of the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:metadata-object($object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "key": "test.xml",
   "bucket": "28msec",
   "metadata":
   {
     "author": "28msec"
   },
   "missing-metadata" : 1,
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "expiration": "expiry-date=\"Fri, 21 Dec 2012 00:00:00 GMT\", rule-id=\"Rule for testfile.txt\""
   "restore": "x-amz-restore: ongoing-request=\"false\", expiry-date=\"Wed, 07 Nov 2012 00:00:00 GMT\""
   "serverSideEncryption": "AES256",
   "lastModified": "Mon, 15 Oct 2012 21:58:07 GMT",
   "eTag": "1accb31fcf202eba0c0f41fa2f09b4d7",
   "mediaType": "text/plain"
   "length": "28"
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, mandatory).</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>missing-metadata: the number of metadata entries that were not returned
   in the metadata object. This can happen if you create metadata using an API
   like SOAP that supports more flexible metadata than the REST API. (integer,
   optional).</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be returned. If specified, only the
   permissions for that particular version of the object will be returned.</li>
   <li>expiration: if the object expiration is configured (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT Bucket lifecycle</a>),
   this field is present. It includes the expiry-date and rule-id key value
   pairs providing object expiration information. The value of rule-id is URL
   encoded.(string, optional).</li>
   <li>restore: if the object is an archived object (an object whose storage
   class is Glacier), the response includes this header if either the archive
   restoration is in progress (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html">POST Object restore</a>),
   or an archive copy is already restored.(string, optional).</li>
   <li>serverSideEncryption: If the object is stored by using server-side
   encryption, the response includes this header with a value of the encryption
   algorithm that was used.(string, optional).</li>
   <li>lastModified: the date in which the object was last modified (dateTime,
   optional).</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. For objects created by the PUT Object operation
   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
   string representing the MD5 digest of the object data. For other objects,
   the eTag may or may not be an MD5 digest of the object data. If the eTag is
   not an MD5 digest of the object data, it will contain one or more non-hexadecimal
   characters and/or will consist of less than 32 or more than 32 hexadecimal
   digits.(string, optional).</li>
   <li>mediaType: the object media-type (string, mandatory).</li>
   <li>length: the object content length (integer, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve the metadata for.</xqdoc:param><xqdoc:return>the specified object metadata.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-metadata</xqdoc:name><xqdoc:signature>declare function s3:object-metadata($s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>object-metadata</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves an object metadata using the default S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#object-metadata-1">object-metadata#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve the metadata for.</xqdoc:param><xqdoc:return>the specified object metadata.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-metadata-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:object-metadata-nondeterministic($s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>object-metadata-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves an object metadata using the specified S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the metadata of the
   latest version of the object will be returned. If specified, only the
   metadata of that particular version of the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:metadata-object("credentials", $object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "key": "test.xml",
   "bucket": "28msec",
   "metadata":
   {
     "author": "28msec"
   },
   "missing-metadata" : 1,
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "expiration": "expiry-date=\"Fri, 21 Dec 2012 00:00:00 GMT\", rule-id=\"Rule for testfile.txt\""
   "restore": "x-amz-restore: ongoing-request=\"false\", expiry-date=\"Wed, 07 Nov 2012 00:00:00 GMT\""
   "serverSideEncryption": "AES256",
   "lastModified": "Mon, 15 Oct 2012 21:58:07 GMT",
   "eTag": "1accb31fcf202eba0c0f41fa2f09b4d7",
   "mediaType": "text/plain"
   "length": "28"
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, mandatory).</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>missing-metadata: the number of metadata entries that were not returned
   in the metadata object. This can happen if you create metadata using an API
   like SOAP that supports more flexible metadata than the REST API. (integer,
   optional).</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be returned. If specified, only the
   permissions for that particular version of the object will be returned.</li>
   <li>expiration: if the object expiration is configured (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT Bucket lifecycle</a>),
   this field is present. It includes the expiry-date and rule-id key value
   pairs providing object expiration information. The value of rule-id is URL
   encoded.(string, optional).</li>
   <li>restore: if the object is an archived object (an object whose storage
   class is Glacier), the response includes this header if either the archive
   restoration is in progress (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOSTrestore.html">POST Object restore</a>),
   or an archive copy is already restored.(string, optional).</li>
   <li>serverSideEncryption: If the object is stored by using server-side
   encryption, the response includes this header with a value of the encryption
   algorithm that was used.(string, optional).</li>
   <li>lastModified: the date in which the object was last modified (dateTime,
   optional).</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. For objects created by the PUT Object operation
   and the POST Object operation, the eTag is a quoted, 32-digit hexadecimal
   string representing the MD5 digest of the object data. For other objects,
   the eTag may or may not be an MD5 digest of the object data. If the eTag is
   not an MD5 digest of the object data, it will contain one or more non-hexadecimal
   characters and/or will consist of less than 32 or more than 32 hexadecimal
   digits.(string, optional).</li>
   <li>mediaType: the object media-type (string, mandatory).</li>
   <li>length: the object content length (integer, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve the metadata for.</xqdoc:param><xqdoc:return>the specified object metadata.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-metadata</xqdoc:name><xqdoc:signature>declare function s3:object-metadata($credentials as item()?, $s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object-from-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves an object metadata using the specified S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#object-metadata-2">object-metadata#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve the metadata for.</xqdoc:param><xqdoc:return>the specified object metadata.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-metadata-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:object-metadata-nondeterministic($credentials as item()?, $s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object-from-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns a torrent file for a given object using the default S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec"
 }
 return s3:object-torrent($object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object to retrieve the torrent file for</xqdoc:param><xqdoc:return>the base64 encoded torrent file for the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-torrent</xqdoc:name><xqdoc:signature>declare function s3:object-torrent($s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>object-torrent</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns a torrent file for a given object using the default S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#object-torrent-1">object-torrent#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object to retrieve the torrent file for</xqdoc:param><xqdoc:return>the base64 encoded torrent file for the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-torrent-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:object-torrent-nondeterministic($s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>object-torrent-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a torrent file for a given object using the specified S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec"
 }
 return s3:object-torrent($object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object to retrieve the torrent file for</xqdoc:param><xqdoc:return>the base64 encoded torrent file of the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-torrent</xqdoc:name><xqdoc:signature>declare function s3:object-torrent($credentials as item()?, $s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns a torrent file for a given object using the specified S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#object-torrent-2">object-torrent#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object to retrieve the torrent file for</xqdoc:param><xqdoc:return>the base64 encoded torrent file of the specified object.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-torrent-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:object-torrent-nondeterministic($credentials as item()?, $s3-object as item()) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Writes a textual object in an S3 bucket using the default S3 credentials.
 If the object already exists it is overwritten.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used.</p>
 <p>If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. The object media-type will be set to "text/plain", no metadata will
 be set for the object, the object will be stored on standard redundancy storage,
 and the object permission will be set to "private", that is, the owner gets
 FULL_CONTROL, and no one else has access rights.</p>
 <p>If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>mediaType: the media-type of the object (string, optional). If not specified,
   "text/plain" is used.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 variable $s3-object :=
 {
   "key": "test.xml",
   "bucket": "28msec",
   "permission": $const:ACL-GRANT-PUBLIC-READ,
   "metadata": { "author": "28msec" },
   "mediaType": "text/xml"
 }
 s3:write-text($s3-object, serialize(&lt;a/&gt;))
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "expiration": "expiry-date=\"Fri, 23 Dec 2012 00:00:00 GMT\", rule-id=\"1\"",
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "eTag": "\"1b2cf535f27731c974343645a3985328\""
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>expiration: if the object expiration is configured, the response
   includes this header. It includes the expiry-date and rule-id key-value
   pairs providing object expiration information. The value of the rule-id is
   URL encoded. (string, optional)</li>
   <li>version: the version of the object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object to write to.</xqdoc:param><xqdoc:param>$text-content The textual object content.</xqdoc:param><xqdoc:return>the S3 operation result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:write-text</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:write-text($object as item(), $text-content as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>text-content</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>write-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Writes a text object in an S3 bucket using the specified S3 credentials.
 If the object already exists it is overwritten.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used.</p>
 <p>If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. The object media-type will be set to "text/plain", no metadata will
 be set for the object, the object will be stored on standard redundancy storage,
 and the object permission will be set to "private", that is, the owner gets
 FULL_CONTROL, and no one else has access rights.</p>
 <p>If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>mediaType: the media-type of the object (string, optional). If not specified,
   "text/plain" is used.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 variable $s3-object :=
 {
   "key": "test.xml",
   "bucket": "28msec",
   "permission": $const:ACL-GRANT-PUBLIC-READ,
   "metadata": { "author": "28msec" },
   "mediaType": "text/xml"
 }
 s3:write-text("credentials", $s3-object, serialize(&lt;a/&gt;))
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "expiration": "expiry-date=\"Fri, 23 Dec 2012 00:00:00 GMT\", rule-id=\"1\"",
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "eTag": "\"1b2cf535f27731c974343645a3985328\""
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>expiration: if the object expiration is configured, the response
   includes this header. It includes the expiry-date and rule-id key-value
   pairs providing object expiration information. The value of the rule-id is
   URL encoded. (string, optional)</li>
   <li>version: the version of the object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object to write to.</xqdoc:param><xqdoc:param>$text-content The textual object content.</xqdoc:param><xqdoc:return>the S3 operation result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:write-text</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:write-text($credentials as item()?, $object as item(), $text-content as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>text-content</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>write-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Writes a binary object in an S3 bucket using the default S3 credentials.
 If the object already exists it is overwritten.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used.</p>
 <p>If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. The object media-type will be set to "binary/octet-stream", no metadata will
 be set for the object, the object will be stored on standard redundancy storage,
 and the object permission will be set to "private", that is, the owner gets
 FULL_CONTROL, and no one else has access rights.</p>
 <p>If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>mediaType: the media-type of the object (string, optional). If not specified,
   "binary/octet-stream" is used.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 variable $s3-object :=
 {
   "key": "test.xml",
   "bucket": "28msec",
   "permission": $const:ACL-GRANT-PUBLIC-READ,
   "metadata": { "author": "28msec" },
   "mediaType": "application/octet-stream"
 }
 s3:write-binary($s3-object, base64Binary("Mjhtc2Vj"))
 </pre>
 Example Result:
 <pre>
 {
   "expiration": "expiry-date=\"Fri, 23 Dec 2012 00:00:00 GMT\", rule-id=\"1\"",
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "eTag": "\"1b2cf535f27731c974343645a3985328\""
 }
 </pre>
 </p>
 <p>The meaning of the fields in the result object is the following:
 <ul>
   <li>expiration: if the object expiration is configured, the response
   includes this header. It includes the expiry-date and rule-id key-value
   pairs providing object expiration information. The value of the rule-id is
   URL encoded. (string, optional)</li>
   <li>version: the version of the object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object to write to.</xqdoc:param><xqdoc:param>$text-content The binary object content.</xqdoc:param><xqdoc:return>the S3 operation result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:write-binary</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:write-binary($object as item(), $binary-content as base64Binary) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>binary-content</xqdoc:name><xqdoc:type>base64Binary</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>write-binary</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Writes a binary object in an S3 bucket using the specified S3 credentials.
 If the object already exists it is overwritten.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used.</p>
 <p>If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. The object media-type will be set to "binary/octet-stream", no metadata will
 be set for the object, the object will be stored on standard redundancy storage,
 and the object permission will be set to "private", that is, the owner gets
 FULL_CONTROL, and no one else has access rights.</p>
 <p>If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>mediaType: the media-type of the object (string, optional). If not specified,
   "binary/octet-stream" is used.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 variable $s3-object :=
 {
   "key": "test.xml",
   "bucket": "28msec",
   "permission": $const:ACL-GRANT-PUBLIC-READ,
   "metadata": { "author": "28msec" },
   "mediaType": "application/octet-stream"
 }
 s3:write-binary("credentials", $s3-object, base64Binary("Mjhtc2Vj"))
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "expiration": "expiry-date=\"Fri, 23 Dec 2012 00:00:00 GMT\", rule-id=\"1\"",
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "eTag": "\"1b2cf535f27731c974343645a3985328\""
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>expiration: if the object expiration is configured, the response
   includes this header. It includes the expiry-date and rule-id key-value
   pairs providing object expiration information. The value of the rule-id is
   URL encoded. (string, optional)</li>
   <li>version: the version of the object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object to write to.</xqdoc:param><xqdoc:param>$text-content The binary object content.</xqdoc:param><xqdoc:return>the S3 operation result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:write-binary</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:write-binary($credentials as item()?, $object as item(), $binary-content as base64Binary) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>binary-content</xqdoc:name><xqdoc:type>base64Binary</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>write-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Writes an object in an S3 bucket using the default S3 credentials.
 If the object already exists it is overwritten.</p>
 <p>The object to write and its contents are specified through the $s3-object
 parameter, which must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>content: the object content. It must either be a string or a base64Binary
   atomic. (item, mandatory).</li>
   <li>mediaType: the media-type of the object (string, optional). If not specified,
   "text/plain" is used if the content field is of type string, "binary/octet-stream"
   if it is of type base64Binary.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 variable $s3-object :=
 {
   "key": "test.xml",
   "bucket": "28msec",
   "permission": $const:ACL-GRANT-PUBLIC-READ,
   "metadata": { "author": "28msec" },
   "content": serialize({ "Hello": "World" }),
   "mediaType": "application/xml"
 }
 s3:write-object($s3-object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "expiration": "expiry-date=\"Fri, 23 Dec 2012 00:00:00 GMT\", rule-id=\"1\"",
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "eTag": "\"1b2cf535f27731c974343645a3985328\""
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>expiration: if the object expiration is configured, the response
   includes this header. It includes the expiry-date and rule-id key-value
   pairs providing object expiration information. The value of the rule-id is
   URL encoded. (string, optional)</li>
   <li>version: the version of the object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object to write.</xqdoc:param><xqdoc:return>the S3 operation result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:write-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:write-object($s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>write-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Writes an object in an S3 bucket using the specified credentials.
 If the object already exists it is overwritten.</p>
 <p>The object to write and its contents are specified through the $s3-object
 parameter, which must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>content: the object content. It must either be a string or a base64Binary
   atomic. (item, mandatory).</li>
   <li>mediaType: the media-type of the object (string, optional). If not specified,
   "text/plain" is used if the content field is of type string, "binary/octet-stream"
   if it is of type base64Binary.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 variable $s3-object :=
 {
   "key": "test.xml",
   "bucket": "28msec",
   "permission": $const:ACL-GRANT-PUBLIC-READ,
   "metadata": { "author": "28msec" },
   "content": serialize({ "Hello": "World" }),
   "mediaType": "application/xml"
 }
 s3:write-object("s3", $s3-object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "expiration": "expiry-date=\"Fri, 23 Dec 2012 00:00:00 GMT\", rule-id=\"1\"",
   "version": "3GL4kqtJlcpXroDTDm3vjVBH40Nr8X8g",
   "eTag": "\"1b2cf535f27731c974343645a3985328\""
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>expiration: if the object expiration is configured, the response
   includes this header. It includes the expiry-date and rule-id key-value
   pairs providing object expiration information. The value of the rule-id is
   URL encoded. (string, optional)</li>
   <li>version: the version of the object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When you PUT an object in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>eTag: the entity tag is a hash of the object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object to write.</xqdoc:param><xqdoc:return>the S3 operation result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:write-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:write-object($credentials as item()?, $s3-object as object()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>write-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Copies an object already stored on s3 into a target bucket using the
 default credentials. If the target object already exists it will be overwritten.</p>
 <p>The source object metadata is copied to the target object, unless new
 metadata is specified. In this case the target object will possess only the
 specified metadata.</p>
 <p>Unless the permissions for the target are specified, the target object will
 have the "private" ACL, that is, the owner gets FULL_CONTROL, and no one else
 has access rights.</p>
 <p>The source S3 object is specified through the $s3-object-source parameter.
 Either a string or a JSON object can be used. If a string is specified, it is
 interpreted as key for an object in the default bucket of the default
 credentials. If no default bucket is present in the default credentials, the
 <code>s3:BUCKET</code> error is raised. If a JSON object is used, it must have
 the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be copied. If specified, only that particular version of the
   object will be copied.</li>
 </ul>
 </p>
 <p>The target S3 object is specified through the $s3-object-target parameter.
 Either a string or a JSON object can be used. If a string is specified and the
 default credentials contain a default bucket, the object will be copied in
 the credentials default bucket. Otherwise, the object will be copied in the
 source object bucket. If a JSON object is used, it must have the following
 structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials contain a default bucket, the object will be
   copied in the credentials default bucket. Otherwise, the object will be
   copied in the source object bucket.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).
   If not specified, the source object metadata will be copied to the target
   object. Otherwise the target object metadata will be the specified one.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $s3-object-source :=
 {
   "key" : "test.xml",
   "bucket": "28msec"
 }
 let $s3-object-target :=
 {
   "key" : "test-copy.xml",
   "bucket": "28msec",
   "permisstion": $s3:ACL-GRANT-PUBLIC-READ
   "metadata":
   {
     "author": "28msec"
   }
 }
 return s3:copy-object($s3-object-source, $s3-object-target)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "sourceVersion": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo",
   "version": "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
   "lastModified": "2009-10-28T22:32:00",
   "eTag": "\"9b2cf535f27731c974343645a3985328\"",
   "expiration": "expiry-date=\"Fri, 21 Dec 2012 00:00:00 GMT\", rule-id=\"Rule for testfile.txt\""
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>sourceVersion: the version of the copied object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>version: the version of the copied object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>lastModified: the last modification date of the target object. (dateTime, optional)</li>
   <li>eTag: the entity tag is a hash of the copeid object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
   <li>expiration: if the object expiration is configured (see
   <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT Bucket lifecycle</a>),
   this field is present. It includes the expiry-date and rule-id key value
   pairs providing object expiration information. The value of rule-id is URL
   encoded.(string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$s3-object-source The S3 object or object version to copy from.</xqdoc:param><xqdoc:param>$s3-object-target The S3 object to write to.</xqdoc:param><xqdoc:return>the S3 copy result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:copy-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:copy-object($s3-object-source as item(), $s3-object-target as item()) as item()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object-source</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object-target</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">item()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>copy-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Copies an object already stored on S3 into a target bucket using the
 specified credentials. If the target object already exists it will be overwritten.</p>
 <p>The source object metadata is copied to the target object, unless new
 metadata is specified. In this case the target object will possess only the
 specified metadata.</p>
 <p>Unless the permissions for the target are specified, the target object will
 have the "private" ACL, that is, the owner gets FULL_CONTROL, and no one else
 has access rights.</p>
 <p>The source S3 object is specified through the $s3-object-source parameter.
 Either a string or a JSON object can be used. If a string is specified, it is
 interpreted as key for an object in the default bucket of the specified
 credentials. If no default bucket is present in the specified credentials, the
 <code>s3:BUCKET</code> error is raised. If a JSON object is used, it must have
 the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the latest version of
   the object will be copied. If specified, only that particular version of the
   object will be copied.</li>
 </ul>
 </p>
 <p>The target S3 object is specified through the $s3-object-target parameter.
 Either a string or a JSON object can be used. If a string is specified and the
 specified credentials contain a default bucket, the object will be copied in
 the credentials default bucket. Otherwise, the object will be copied in the
 source object bucket. If a JSON object is used, it must have the following
 structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials contain a default bucket, the object will be
   copied in the credentials default bucket. Otherwise, the object will be
   copied in the source object bucket.</li>
   <li>metadata: an object specifying additional metadata. Each metadata is a
   name-value pair and is represented as different fields (object, optional).
   If not specified, the source object metadata will be copied to the target
   object. Otherwise the target object metadata will be the specified one.</li>
   <li>reducedRedundancy: whether to use reduced-redundancy or not (bool,
   optional). Default is false.</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $s3-object-source :=
 {
   "key" : "test.xml",
   "bucket": "28msec"
 }
 let $s3-object-target :=
 {
   "key" : "test-copy.xml",
   "bucket": "28msec",
   "permisstion": $s3:ACL-GRANT-PUBLIC-READ
   "metadata":
   {
     "author": "28msec"
   }
 }
 return s3:copy-object("credentials", $s3-object-source, $s3-object-target)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "sourceVersion": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo",
   "version": "QUpfdndhfd8438MNFDN93jdnJFkdmqnh893",
   "lastModified": "2009-10-28T22:32:00",
   "eTag": "\"9b2cf535f27731c974343645a3985328\"",
   "expiration": "expiry-date=\"Fri, 21 Dec 2012 00:00:00 GMT\", rule-id=\"Rule for testfile.txt\""
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
   <li>sourceVersion: the version of the copied object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>version: the version of the copied object. When you enable versioning,
   Amazon S3 generates a random number for objects added to a bucket. The value
   is UTF-8 encoded and URL ready. When the soruce object is copied in a bucket where
   versioning has been suspended, the version ID is always null. (string, optional)</li>
   <li>lastModified: the last modification date of the target object. (dateTime, optional)</li>
   <li>eTag: the entity tag is a hash of the copeid object. The eTag only reflects
   changes to the contents of an object, not its metadata. The eTag is determined
   when an object is created. The eTag returned by this method is a quoted,
   32-digit hexadecimal string representing the MD5 digest of the object data.
   For other objects, the eTag may or may not be an MD5 digest of the object data.
   (string, optional).</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object-source The S3 object or object version to copy from.</xqdoc:param><xqdoc:param>$s3-object-target The S3 object to write to.</xqdoc:param><xqdoc:return>the S3 copy result.</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:copy-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:copy-object($credentials as item()?, $s3-object-source as item(), $s3-object-target as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object-source</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object-target</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>headers</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>data</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves the access control list (ACL) of an S3 object using the default
 S3 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be returned. If specified, only the
   permissions for that particular version of the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:object-permissions($object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "owner" :
   {
     "id" : "ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed",
     "displayName" : "28msec"
   },
   "acl" :
   [
     {
       "grantee" :
       {
         "type" : "CanonicalUser",
         "id" : "ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed",
         "displayName" : "28msec"
       },
       "permission" : "FULL_CONTROL"
     }
   ]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
 <li>owner: an object which specifies the owner of the object (object,
 mandatory). It has the following fields:
   <ul>
     <li>id: the user identifier of the object owner (string, mandatory).</li>
     <li>displayName: the screen name of the object owner (string, mandatory).</li>
   </ul>
 </li>
 <li>acl: an array which contains an object for each grantee with the corresponding
 ACL settings (array, mandatory). Each object contains the following fields:
   <ul>
     <li>grantee: specifies the permissions grantee (object, mandatory). It
     contains the following fields:
       <ul>
         <li>type: one of "AmazonCustomerByEmail", "CanonicalUser" or "Group".</li>
         <li>emailAddress: the customer email address (string, present in all
         and only AmazonCustomerByEmail grantees).</li>
         <li>id: the user identifier (string, present in all and only CanonicalUser
         grantees).</li>
         <li>displayName: the user screen name (string, present in all and only
         CanonicalUser grantees).</li>
         <li>URI: the group URI (string, present in all and only Group grantees).</li>
       </ul>
     </li>
     <li>permission: the granted permissions. One of "READ", "WRITE", "READ_ACP",
     "WRITE_ACP", "FULL_CONTROL". (string, mandatory).</li>
   </ul>
 </li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve the ACL for.</xqdoc:param><xqdoc:return>the object ACL</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-permissions</xqdoc:name><xqdoc:signature>declare function s3:object-permissions($s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>object-permissions</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Retrieves the access control list (ACL) of an S3 object using the default
 S3 credentials.</p>
 <p>This function has the same semantics as
 <a href="#object-permissions-1">object-permissions#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version to retrieve the ACL for.</xqdoc:param><xqdoc:return>the object ACL</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-permissions-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:object-permissions-nondeterministic($s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>object-permissions-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves the access control list (ACL) of an S3 object using the specified
 credentials.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials does not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be returned. If specified, only the
   permissions for that particular version of the object will be returned.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo"
 }
 return s3:object-permissions("credentials", $object)
 </pre>
 </p>
 <p>Example return object:
 <pre>
 {
   "owner" :
   {
     "id" : "ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed",
     "displayName" : "28msec"
   },
   "acl" :
   [
     {
       "grantee" :
       {
         "type" : "CanonicalUser",
         "id" : "ea3617f5543e366a51bf51f440c221410b8001c34744e9d3a81acb79cff9d2ed",
         "displayName" : "28msec"
       },
       "permission" : "FULL_CONTROL"
     }
   ]
 }
 </pre>
 </p>
 <p>The fields in the returned object have the following meanings:
 <ul>
 <li>owner: an object which specifies the owner of the object (object,
 mandatory). It has the following fields:
   <ul>
     <li>id: the user identifier of the object owner (string, mandatory).</li>
     <li>displayName: the screen name of the object owner (string, mandatory).</li>
   </ul>
 </li>
 <li>acl: an array which contains an object for each grantee with the corresponding
 ACL settings (array, mandatory). Each object contains the following fields:
   <ul>
     <li>grantee: specifies the permissions grantee (object, mandatory). It contains
     the following fields:
       <ul>
         <li>type: one of "AmazonCustomerByEmail", "CanonicalUser" or "Group".</li>
         <li>emailAddress: the customer email address (string, present in all
         and only AmazonCustomerByEmail grantees).</li>
         <li>id: the user identifier (string, present in all and only CanonicalUser
         grantees).</li>
         <li>displayName: the user screen name (string, present in all and only
         CanonicalUser grantees).</li>
         <li>URI: the group URI (string, present in all and only Group grantees).</li>
       </ul>
     </li>
     <li>permission: the granted permissions. One of "READ", "WRITE", "READ_ACP",
     "WRITE_ACP", "FULL_CONTROL". (string, mandatory).</li>
   </ul>
 </li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve the ACL for.</xqdoc:param><xqdoc:return>the object ACL</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-permissions</xqdoc:name><xqdoc:signature>declare function s3:object-permissions($credentials as item()?, $s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Retrieves the access control list (ACL) of an S3 object using the specified
 credentials.</p>
 <p>This function has the same semantics as
 <a href="#object-permissions-2">object-permissions#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version to retrieve the ACL for.</xqdoc:param><xqdoc:return>the object ACL</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:object-permissions-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function s3:object-permissions-nondeterministic($credentials as item()?, $s3-object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Sets the access control list (ACL) of an S3 object using the default S3
 credentials.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the default credentials. If no default
 bucket is present in the default credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the default credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be set. If specified, only the
   permissions for that particular version of the object will be set.</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo",
   "permission": $s3:ACL-GRANT-PUBLIC-READ
 }
 return s3:set-object-permissions($object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$s3-object The S3 object or object version and ACL to set.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the default S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>s3:set-object-permissions</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:set-object-permissions($s3-object as item()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>set-object-permissions</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Sets the access control list (ACL) of an S3 object using the specified S3
 credentials.</p>
 <p>The S3 object is specified through the $s3-object parameter. Either a string
 or a JSON object can be used. If a string is specified, it is interpreted as
 key for an object in the default bucket of the specified credentials. If no default
 bucket is present in the specified credentials, the <code>s3:BUCKET</code> error
 is raised. If a JSON object is used, it must have the following structure:
 <ul>
   <li>key: the object key (string, mandatory).</li>
   <li>bucket: the bucket name (string, optional). If this field is not present
   and the specified credentials do not have a default bucket, the
   <code>s3:BUCKET</code> error is raised.</li>
   <li>version: the object version (string, optional). If versioning is enabled
   for the specified object and no version is specified the permissions for the
   latest version of the object will be set. If specified, only the
   permissions for that particular version of the object will be set.</li>
   <li>permission: the permission to set (string, optional). It must be one of
   "private", "public-read", "public-read-write", "authenticated-read",
   "bucket-owner-read", "bucket-owner-full-control". For your convenience the
   following variables can be used: <code>$s3:ACL-GRANT-PRIVATE</code>,
   <code>$s3:ACL-GRANT-PUBLIC-READ</code>, <code>$s3:ACL-GRANT-PUBLIC-READ-WRITE</code>,
   <code>$s3:ACL-GRANT-AUTHENTICATED-READ</code>, <code>$s3:ACL-GRANT-BUCKET-OWNER-READ</code>,
   <code>$s3:ACL-GRANT-BUCKET-OWNER-FULL-CONTROL</code>. If this field is not
   specified, the "private" ACL is used, that is, the owner gets FULL_CONTROL,
   and no one else has access rights.</li>
 </ul>
 </p>
 <p>Example:
 <pre>
 let $object :=
 {
   "key": "object",
   "bucket": "28msec",
   "version": "3/L4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo",
   "permission": $s3:ACL-GRANT-PUBLIC-READ
 }
 return s3:set-object-permissions($object)
 </pre>
 </p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use.</xqdoc:param><xqdoc:param>$s3-object The S3 object or object version and ACL to set.</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error></xqdoc:comment><xqdoc:name>s3:set-object-permissions</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function s3:set-object-permissions($credentials as item()?, $s3-object as item()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:CONTENT if the object content is not textual</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:read-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:read-object($credentials as item()?, $s3-object as item(), $override-media-type as string?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>override-media-type</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object-from-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:CONTENT if the object content is not textual</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:read-object-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic %private function s3:read-object-nondeterministic($credentials as item()?, $s3-object as item(), $override-media-type as string?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>override-media-type</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object-from-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Sends a signed S3 request</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use</xqdoc:param><xqdoc:param>$request The HTTP request to send</xqdoc:param><xqdoc:param>$bucket-name The bucket name</xqdoc:param><xqdoc:param>$object-key The key of the object (if any) used in the S3 request</xqdoc:param><xqdoc:return>the server HTTP response</xqdoc:return><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error></xqdoc:comment><xqdoc:name>s3:send-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %private %an:sequential function s3:send-request($credentials as object(), $request as object(), $bucket-name as string, $object-key as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>request</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket-name</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>object-key</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>handle-s3-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="5"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>sign-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Sends a signed S3 request</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use</xqdoc:param><xqdoc:param>$request The HTTP request to send</xqdoc:param><xqdoc:param>$bucket-name The bucket name</xqdoc:param><xqdoc:param>$object-key The key of the object (if any) used in the S3 request</xqdoc:param><xqdoc:return>the server HTTP response</xqdoc:return><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error></xqdoc:comment><xqdoc:name>s3:send-nondeterministic-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %private %an:nondeterministic function s3:send-nondeterministic-request($credentials as object(), $request as object(), $bucket-name as string, $object-key as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>request</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket-name</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>object-key</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>handle-s3-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="5"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>sign-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-nondeterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Sends a signed S3 request</p>
</xqdoc:description><xqdoc:param>$credentials The credentials to use</xqdoc:param><xqdoc:param>$request The HTTP request to send</xqdoc:param><xqdoc:param>$bucket-name The bucket name</xqdoc:param><xqdoc:param>$object-key The key of the object (if any) used in the S3 request</xqdoc:param><xqdoc:return>the server HTTP response</xqdoc:return><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error></xqdoc:comment><xqdoc:name>s3:send-deterministic-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:send-deterministic-request($credentials as object(), $request as object(), $bucket-name as string, $object-key as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>request</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket-name</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>object-key</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>handle-s3-response</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="5"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>sign-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://zorba.io/modules/http-client</xqdoc:uri><xqdoc:name>send-deterministic-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>s3:handle-s3-response</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:handle-s3-response($response as object()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>handle-s3-error</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>s3:handle-s3-error</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:handle-s3-error($response as object()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Writes an object in an S3 bucket</p>
</xqdoc:description><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error></xqdoc:comment><xqdoc:name>s3:write-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %private %an:sequential function s3:write-object($credentials as item()?, $s3-object as item()?, $media-type as string, $content as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>media-type</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>headers</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>send-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>uri-encode-key</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Validates and returns an S3 object.</p>
</xqdoc:description><xqdoc:error>s3:OBJECT if the object specification is invalid</xqdoc:error></xqdoc:comment><xqdoc:name>s3:s3-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:s3-object($object as item()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>s3-object</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>s3:s3-object</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:s3-object($object as item(), $schema as object()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>schema</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>validate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>s3:response-xml</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:response-xml($response as object()) as element(*)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(*)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Parses the S3 response as XML.</p>
</xqdoc:description><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:response-xml</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:response-xml($response as object(), $validate as boolean) as element(*)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>validate</xqdoc:name><xqdoc:type>boolean</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>element(*)</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>parse-xml</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Converts XML into JSON.</p>
</xqdoc:description></xqdoc:comment><xqdoc:name>s3:create-json</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:create-json($elem as element(*)) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>elem</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Converts XML into JSON.</p>
</xqdoc:description></xqdoc:comment><xqdoc:name>s3:create-json</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:create-json($elem as element(*), $include-empty as string*) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>elem</xqdoc:name><xqdoc:type>element(*)</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>include-empty</xqdoc:name><xqdoc:type occurrence="*">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>data</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>local-name</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>lower-case</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>matches</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>substring</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>substring</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> <p>Adds the Authorization header to the request according to
 <a href="http://docs.amazonwebservices.com/AmazonS3/latest/dev/index.html?RESTAuthentication.html">
 Amazon S3 RESTAuthentication</a></p>
</xqdoc:description></xqdoc:comment><xqdoc:name>s3:sign-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:sign-request($request as object(), $bucketname as string, $object-key as string, $accessKey as string, $secretKey as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>request</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucketname</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>object-key</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>accessKey</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>secretKey</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>add-retry-options</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>lower-case</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>replace</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>starts-with</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>substring-after</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>substring-before</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tokenize</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/hmac</xqdoc:uri><xqdoc:name>sha1</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Adds the retry options</p>
</xqdoc:description></xqdoc:comment><xqdoc:name>s3:add-retry-options</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:add-retry-options($request as object()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>request</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Creates an HTTP request.</p>
</xqdoc:description><xqdoc:param>$method the http method to be used for the request (GET, POST,...)</xqdoc:param><xqdoc:param>$href the targeted href URL for the request</xqdoc:param><xqdoc:return>the newly created http request</xqdoc:return></xqdoc:comment><xqdoc:name>s3:create-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:create-request($method as string, $href as string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>method</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>href</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="0"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>http-date</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>x-amz-date</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>upper-case</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Creates an HTTP request.</p>
</xqdoc:description><xqdoc:param>$method the http method to be used for the request (GET, POST, ...)</xqdoc:param><xqdoc:param>$href the targeted href URL for the request</xqdoc:param><xqdoc:param>$parameters a sequence of <code>parameter</code> elements each having a <code>name</code> and a <code>value</code> attribute.</xqdoc:param><xqdoc:return>the newly created http request</xqdoc:return></xqdoc:comment><xqdoc:name>s3:create-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:create-request($method as string, $href as string, $parameters as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>method</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>href</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>parameters</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Creates an HTTP request.</p>
</xqdoc:description><xqdoc:param>$method the http method to be used for the request (GET, POST, ...)</xqdoc:param><xqdoc:param>$href the targeted href URL for the request</xqdoc:param><xqdoc:param>$parameters a sequence of <code>parameter</code> elements each having a <code>name</code> and a <code>value</code> attribute.</xqdoc:param><xqdoc:param>$headers a sequence of <code>header</code> elements each having a <code>name</code> and a <code>value</code> attribute.</xqdoc:param><xqdoc:return>the newly created http request</xqdoc:return></xqdoc:comment><xqdoc:name>s3:create-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:create-request($method as string, $href as string, $parameters as object()?, $headers as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>method</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>href</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>parameters</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>headers</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="6"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="6"><xqdoc:comment><xqdoc:description> <p>Creates an HTTP request.</p>
</xqdoc:description><xqdoc:param>$method the http method to be used for the request (GET, POST,...)</xqdoc:param><xqdoc:param>$href the targeted href URL for the request</xqdoc:param><xqdoc:param>$parameters a sequence of <code>parameter</code> elements each having a <code>name</code> and a <code>value</code> attribute.</xqdoc:param><xqdoc:param>$headers a sequence of <code>header</code> elements each having a <code>name</code> and a <code>value</code> attribute.</xqdoc:param><xqdoc:param>$content-type a string defining the content type of the body data</xqdoc:param><xqdoc:param>$content the data to be send in the body of the request</xqdoc:param><xqdoc:return>the newly created http request</xqdoc:return></xqdoc:comment><xqdoc:name>s3:create-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:create-request($method as string, $href as string, $parameters as object()?, $headers as object()?, $media-type as string?, $content as item()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>method</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>href</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>parameters</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>headers</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>media-type</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>content</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="0"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>http-date</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>x-amz-date</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>encode-for-uri</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Creates an HTTP request URL with the correct protocol provided by the
 <code>$aws-credentials</code> element.</p>
</xqdoc:description><xqdoc:param>$aws-credentials The aws-credentials element containing authentication information for connections to AWS</xqdoc:param><xqdoc:param>$target-url The targeted href URL without protocol</xqdoc:param><xqdoc:return>the http request URL</xqdoc:return></xqdoc:comment><xqdoc:name>s3:href</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:href($aws-credentials as object()) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>aws-credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>s3:href</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:href($aws-credentials as object(), $bucket as string) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>aws-credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:name>s3:href</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:href($aws-credentials as object(), $bucket as string?, $key as string?) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>aws-credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Generates a date formated according to rfc822. Example: Fri, 15 Oct 10</p>
</xqdoc:description><xqdoc:return>rfc822 formated date as string</xqdoc:return></xqdoc:comment><xqdoc:name>s3:http-date</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:http-date() as string</xqdoc:signature><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>adjust-dateTime-to-timezone</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>current-dateTime</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>dayTimeDuration</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="5"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>format-dateTime</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Generates a date formated as required by S3.</p>
</xqdoc:description></xqdoc:comment><xqdoc:name>s3:x-amz-date</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:x-amz-date() as string</xqdoc:signature><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>adjust-dateTime-to-timezone</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>current-dateTime</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>dayTimeDuration</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>format-dateTime</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Generates a date formated: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.</p>
</xqdoc:description></xqdoc:comment><xqdoc:name>s3:timestamp</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:timestamp() as string</xqdoc:signature><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>adjust-dateTime-to-timezone</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>current-dateTime</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>dayTimeDuration</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="5"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>format-dateTime</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns the bucket to use. The bucket is mandatory.</p>
</xqdoc:description><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error></xqdoc:comment><xqdoc:name>s3:bucket</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:bucket($bucket as string?, $credentials as object()) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Returns the bucket to use. The $mandatory parameter specifies if the
 bucket is mandatory.</p>
</xqdoc:description><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials and the $mandatory parameter is true</xqdoc:error></xqdoc:comment><xqdoc:name>s3:bucket</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:bucket($bucket as string?, $credentials as object(), $mandatory as boolean) as string?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>mandatory</xqdoc:name><xqdoc:type>boolean</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">string?</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Returns and validate the specified credentials.</p>
</xqdoc:description><xqdoc:error>s3:CREDENTIALS The specified credentials do not exist or are invalid</xqdoc:error></xqdoc:comment><xqdoc:name>s3:credentials</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:credentials($credentials as item()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials</xqdoc:name><xqdoc:type occurrence="?">item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>validate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>false</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Validates a JSON object.</p>
</xqdoc:description><xqdoc:error>s3:VALIDATION if the object is not valid</xqdoc:error></xqdoc:comment><xqdoc:name>s3:validate</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:validate($object as object(), $schema as object(), $allow-extra-fields as boolean) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>schema</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>allow-extra-fields</xqdoc:name><xqdoc:type>boolean</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>validate-field</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>ends-with</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>replace</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:name>s3:validate-field</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare updating %private function s3:validate-field($type as string, $object as object(), $key as string)</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>type</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>object</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>s3:metadata</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:metadata($response as object()) as object()?</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">object()?</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>deep-equal</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>integer</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>starts-with</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>substring-after</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>s3:headers</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:headers($headers as object(), $response as object()) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>headers</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:name>s3:s3-object-from-response</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:s3-object-from-response($s3-object as object(), $response as object()) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>s3-object</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>headers</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>metadata</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>dateTime</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>integer</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>s3:uri-encode-key</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:uri-encode-key($key as string) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>key</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>encode-for-uri</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>string-join</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>tokenize</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error></xqdoc:comment><xqdoc:name>s3:list-bucket-versions-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:list-bucket-versions-request($aws-credentials as object(), $bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>aws-credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>validate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>false</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:list-bucket-versions-response</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:list-bucket-versions-response($response as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>data</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>local-name</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:error>s3:CREDENTIALS if the specified S3 credentials cannot be found or are invalid</xqdoc:error><xqdoc:error>s3:BUCKET if no bucket has been specified and no default bucket is present in the used credentials</xqdoc:error><xqdoc:error>s3:OPTIONS if the specified options are invalid</xqdoc:error></xqdoc:comment><xqdoc:name>s3:list-bucket-request</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:list-bucket-request($aws-credentials as object(), $bucket as string?, $options as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>aws-credentials</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>bucket</xqdoc:name><xqdoc:type occurrence="?">string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>bucket</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-request</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>href</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>validate</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>false</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:error>s3:HTTP an HTTP error occurred sending the request to S3</xqdoc:error><xqdoc:error>s3:REQUEST S3 refused to execute the request</xqdoc:error><xqdoc:error>s3:RESPONSE the response received from S3 cannot be parsed</xqdoc:error></xqdoc:comment><xqdoc:name>s3:list-bucket-response</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function s3:list-bucket-response($response as object()?) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>response</xqdoc:name><xqdoc:type occurrence="?">object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>create-json</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/s3</xqdoc:uri><xqdoc:name>response-xml</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>data</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>exists</xqdoc:name></xqdoc:invoked></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>