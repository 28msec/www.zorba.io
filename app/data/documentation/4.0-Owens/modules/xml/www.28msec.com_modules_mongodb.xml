<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-02-17T14:42:36.342765+02:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>mongodb</xqdoc:name><xqdoc:comment><xqdoc:description> <p>This module provides a driver to access a
 <a href="http://www.mongodb.org/">MongoDB</a> database - similar to
 drivers for other high-level languages like e.g.
 <a href="http://api.mongodb.org/python/current/">PyMongo</a>.</p>
 <p>Here is a simple example of how we can raise the salary of each
 developer by 10%.
 Starting with an <em>employees</em> collection in MongoDB that contains
 <pre>
 { "name" : "Peter", "role" : "developer" , "salary" : 80 }
 { "name" : "Paul",  "role" : "developer" , "salary" : 75 }
 { "name" : "Mary",  "role" : "manager"   , "salary" : 90 } </pre>
 we can get a connection
 <pre>
 variable $conn := mongo:connect("hostname", 27017, "db", "user", "password");
 </pre>
 run this update
 <pre>
 for $emp in mongo:find($conn, "employees")
 where $emp("role") = "developer"
 let $salary := $emp("salary")
 return {
   replace value of json $emp("salary") with $salary * 1.1;
   mongo:save($conn, "employees", $emp)
 };
 </pre>
 and get the names and the current salaries using
 <pre>
 mongo:find($conn, "employees", {}, { "_id" : false, "role" : false }, {}) </pre>
 In this query we have removed the <em>_id</em> and <em>role</em> fields from
 the results and get
 <pre>
 { "name" : "Peter", "salary" : 88   }
 { "name" : "Paul",  "salary" : 82.5 }
 { "name" : "Mary",  "salary" : 90   }
 </pre>
 </p>
 <h2 id="determinism">Important Notice Regarding Function Determinism</h2>
 <p>The non side-effecting functions:
 <ul>
   <li><a href="#connect-0">connect#0</a></li>
   <li><a href="#connect-1">connect#1</a></li>
   <li><a href="#connect-2">connect#2</a></li>
   <li><a href="#connect-5">connect#5</a></li>
   <li><a href="#collection-names-1">collection-names#1</a></li>
   <li><a href="#count-2">count#2</a></li>
   <li><a href="#count-3">count#3</a></li>
   <li><a href="#find-2">find#2</a></li>
   <li><a href="#find-3">find#3</a></li>
   <li><a href="#find-4">find#4</a></li>
   <li><a href="#find-5">find#5</a></li>
 </ul>
 are declared deterministic, which means that their results could be cached
 when invoked multiple times with the same arguments in the same query execution.</p>
 <p>To not use cached results you can use the following alternative functions:
 <ul>
   <li><a href="#connect-nondeterministic-0">connect-nondeterministic#0</a></li>
   <li><a href="#connect-nondeterministic-1">connect-nondeterministic#1</a></li>
   <li><a href="#connect-nondeterministic-2">connect-nondeterministic#2</a></li>
   <li><a href="#connect-nondeterministic-5">connect-nondeterministic#5</a></li>
   <li><a href="#collection-names-nondeterministic-1">collection-names-nondeterministic#1</a></li>
   <li><a href="#count-nondeterministic-2">count-nondeterministic#2</a></li>
   <li><a href="#count-nondeterministic-3">count-nondeterministic#3</a></li>
   <li><a href="#find-nondeterministic-2">find-nondeterministic#2</a></li>
   <li><a href="#find-nondeterministic-3">find-nondeterministic#3</a></li>
   <li><a href="#find-nondeterministic-4">find-nondeterministic#4</a></li>
   <li><a href="#find-nondeterministic-5">find-nondeterministic#5</a></li>
 </ul>
 which have been declared as being non deterministic.</p>
 <p>Three different functions have been defined to run mongo commands:
 <ul>
   <li><a href="#run-cmd-2">run-cmd#2</a></li>
   <li><a href="#run-cmd-nondeterministic-2">run-cmd-nondeterministic#2</a></li>
   <li><a href="#run-cmd-deterministic-2">run-cmd-deterministic#2</a></li>
 </ul>
 If your application depends on the ordering of side-effects from commands issued
 through these functions you should use <a href="#run-cmd-2">run-cmd#2</a>,
 which has been declared as sequential.
 For non-side-effecting commands you can also use
 <a href="#run-cmd-nondeterministic-2">run-cmd-nondeterministic#2</a> and
 <a href="#run-cmd-deterministic-2">run-cmd-deterministic#2</a>.
 The results of commands executed by means of
 <a href="#run-cmd-deterministic-2">run-cmd-deterministic#2</a> (which is
 declared <i>deterministic</i>) could be cached, whereas the results of
 commands executed by means of
 <a href="#run-cmd-nondeterministic-2">run-cmd-nondeterministic#2</a> (which is
 declared <i>non-deterministic</i>) are never cached.</p>
 <h2 id="navigation-operator-characters">Important Notice on Navigation and Operator Characters</h2>
 <p>
   This module allows to store documents which contain fields whose name starts with a dollar
   (<code>$</code>) or that contains a dot (<code>.</code>).
   The
   <a href="#update-4">update#4</a>,
   <a href="#update-5">update#5</a>,
   <a href="#remove-3">remove#3</a>,
   <a href="#remove-4">remove#4</a>,
   <a href="#count-3">count#3</a>,
   <a href="#count-4">count#4</a>,
   <a href="#find-3">find#3</a>,
   <a href="#find-4">find#4</a>,
   <a href="#find-5">find#5</a>,
   <a href="#run-cmd-2">run-cmd#2</a>,
   <a href="#run-cmd-3">run-cmd#3</a> methods and their (non-)deterministic alternatives accept
   query/projection/command objects where these two character have a special meaning.
   Specifically, a field that starts with a dollar is a MongoDB operator (for instance the
   <code>$and</code> operator) and where the dot character is used for navigating nested
   fields.
   To specify a query/projection/command object that refers to fields which contain dots or that start
   with a dollar, you may specify a different navigation/operator character, using the
   <code>navigation-character</code> and <code>operator-character</code> options.
 </p>
 <p>
   For instance, starting with an empty <code>collection</code> collection, the following query
   exemplifies the common usage of the find function:
   <pre>
   variable $conn := mongo:connect("hostname", 27017, "db", "user", "password");
   mongo:save($conn, "collection", { "a": { "b_c" : 1 });
   mongo:find($conn, "collection", { "a.b_c": 1})
   </pre>
   The third parameter of the find#3 function specifies to look for documents which contain a
   <code>b_c</code> field nested into an <code>a</code> field.
 </p>
 <p>
   Consider now the case where we store a document with a field which contain dots:
   <pre>
   variable $conn := mongo:connect("hostname", 27017, "db", "user", "password");
   mongo:save($conn, "collection", { "a": { "b.c" : 1 });
   mongo:find($conn, "collection", { "a/b.c": 1}, {"navigation-character": "/"})
   </pre>
 </p>
 <h2 id="implicit-escaping">Implicit Escaping of MongoDB documents</h2>
 <p>
   MongoDB <a href="http://docs.mongodb.org/manual/reference/limits/#Restrictions-on-Field-Names">
   does not allow to store</a> document fields that contain dots
   <code>.</code>, null characters, or that start with a dollar sign <code>$</code>.
 </p>
 <p>
   When storing a document this module automatically escapes fields names replacing dots
   and dollars (when at the beginning of a field name) characters with their Unicode full
   width equivalents: U+FF04 (<code>＄</code>) and U+FF0E (<code>．</code>), following the
   <a href="http://docs.mongodb.org/manual/faq/developers/#faq-dollar-sign-escaping">
   MongoDB escaping best practices</a>.
   Conversely, when retrieving a document from a collection, this escaping is reversed.
 </p>
 <p>
   For instance, starting with an empty <code>collection</code> collection, the following query:
   <pre>
   variable $conn := mongo:connect("hostname", 27017, "db", "user", "password");
   mongo:save($conn, "collection", { "a": 1, "a.b" : 2 });
   mongo:find($conn, "collection")
   </pre>
   will return the document <code>{ "a": 1, "a.b" : 2 }</code>, where both the query and
   the returned document contain only the common dot <code>.</code> character.
   Internally, MongoDB will store the document <code>{ "a": 1, "a．b" : 2 }</code> which
   contains the U+FF0E (<code>．</code>) character.
 </p>
</xqdoc:description><xqdoc:author>28msec</xqdoc:author><xqdoc:custom tag="language">jsoniq</xqdoc:custom><xqdoc:custom tag="version">1.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="http://zorba.io/annotations" isSchema="false"/><xqdoc:namespace prefix="credentials" uri="http://www.28msec.com/modules/credentials" isSchema="false"/><xqdoc:namespace prefix="m-schema" uri="http://www.28msec.com/modules/mongodb/types" isSchema="true"/><xqdoc:namespace prefix="mongo" uri="http://www.28msec.com/modules/mongodb" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports><xqdoc:import type="schema"><xqdoc:uri>http://www.28msec.com/modules/mongodb/types</xqdoc:uri></xqdoc:import><xqdoc:import type="library"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri></xqdoc:import></xqdoc:imports><xqdoc:variables><xqdoc:variable><xqdoc:uri>mongo:credentials-category</xqdoc:uri><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations></xqdoc:variable></xqdoc:variables><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> <p>Connect to a MongoDB database.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
</xqdoc:description><xqdoc:param>$host the host to connect to</xqdoc:param><xqdoc:param>$port the port to connect to</xqdoc:param><xqdoc:param>$db the database to connect to</xqdoc:param><xqdoc:param>$user the user used to authorize access to the db</xqdoc:param><xqdoc:param>$pass the password used to authorize access to the db</xqdoc:param><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="strictlydeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:strictlydeterministic function mongo:connect($host as xs:string, $port as xs:integer?, $db as xs:string, $user as xs:string?, $pass as xs:string?) as xs:anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>host</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>port</xqdoc:name><xqdoc:type occurrence="?">xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>user</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>pass</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-impl</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> <p>Connect to a MongoDB database.</p>
 <p>This function has the same semantics as <a href="#connect-5">connect#5</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$host the host to connect to</xqdoc:param><xqdoc:param>$port the port to connect to</xqdoc:param><xqdoc:param>$db the database to connect to</xqdoc:param><xqdoc:param>$user the user used to authorize access to the db</xqdoc:param><xqdoc:param>$pass the password used to authorize access to the db</xqdoc:param><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:connect-nondeterministic($host as xs:string, $port as xs:integer?, $db as xs:string, $user as xs:string?, $pass as xs:string?) as xs:anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>host</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>port</xqdoc:name><xqdoc:type occurrence="?">xs:integer</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>user</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>pass</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-nondeterministic-impl</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Connect to this project's default MongoDB database.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
</xqdoc:description><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="strictlydeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:strictlydeterministic function mongo:connect() as xs:anyURI</xqdoc:signature><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-impl</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="0"><xqdoc:comment><xqdoc:description> <p>Connect to this project's default MongoDB database.</p>
 <p>This function has the same semantics as <a href="#connect-0">connect#0</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:connect-nondeterministic() as xs:anyURI</xqdoc:signature><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-nondeterministic-impl</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Connect to a MongoDB database.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The $connection-config parameter is used to specify the connection information.
 If a string is used, then the function will interpret it as the name of
 a credential in the MongoDB category.
 If an object is used, then the function will open a connection using it.
 The object structure is the following:
 <ul>
   <li>host (string; mandatory)</li>
   <li>port (integer; default: 27017)</li>
   <li>db (string; mandatory)</li>
   <li>user (string)</li>
   <li>pass (string)</li>
   <li>timeout (decimal; default: 0)</li>
   <li>pre-digested (boolean; default: false)</li>
 </ul>
 </p>
 <p>For example, using stored credential:
 <pre>mongo:connect("credentials-name")</pre>
 <p>For example, specifying the connection information:</p>
 <pre>mongo:connect(
   {
     "host": "hostname",
     "port": 11011,
     "db": "mydb",
     "user": "myuser"
     "password: "mypass"
   })</pre>.
 </p>
</xqdoc:description><xqdoc:param>$connection-config the connection specification.</xqdoc:param><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO001 if the connection specification is invalid</xqdoc:error><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="strictlydeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:strictlydeterministic function mongo:connect($connection-config as item()) as xs:anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>connection-config</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-impl</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Connect to a MongoDB database.</p>
 <p>This function has the same semantics as <a href="#connect-1">connect#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$connection-config the connection specification.</xqdoc:param><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO001 if the connection specification is invalid</xqdoc:error><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:connect-nondeterministic($connection-config as item()) as xs:anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>connection-config</xqdoc:name><xqdoc:type>item()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-nondeterministic-impl</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Connect to a MongoDB database.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>The $credentials-name parameter is used to specify the connection information.
 If empty a connection will be opened to the project default MongoDB database.
 Otherwise, the function will use it to identify a credential in the MongoDB category.
 </p>
 <p> The $options object can be used to specify connection options. The following
 fields are supported:
 <ul>
   <li>timeout (decimal; default: 0)</li>
 </ul>
 </p>
 <p>For example, connecting to the project default MongoDB database:
 <pre>mongo:connect((), {"timeout": 10})</pre>
 </p>
 <p>For example, specifying the connection information:
 <pre>mongo:connect("credentials-name", {"timeout": 10})</pre>
 </p>
</xqdoc:description><xqdoc:param>$credentials-name the name of the credentials to use.</xqdoc:param><xqdoc:param>$options the name of the credentials to use.</xqdoc:param><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO001 if the connection specification is invalid</xqdoc:error><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="strictlydeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:strictlydeterministic function mongo:connect($credentials-name as xs:string?, $options as object()) as xs:anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials-name</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-impl</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>project</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Connect to a MongoDB database.</p>
 <p>This function has the same semantics as <a href="#connect-2">connect#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$credentials-name the name of the credentials to use.</xqdoc:param><xqdoc:param>$options the name of the credentials to use.</xqdoc:param><xqdoc:return>an identifier for a connection to the MongoDB database.</xqdoc:return><xqdoc:error>mongo:MONGO001 if the connection specification is invalid</xqdoc:error><xqdoc:error>mongo:MONGO002 connection to MongoDB failed</xqdoc:error><xqdoc:error>mongo:MONGO003 authentication to the MongoDB database failed</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:connect-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:connect-nondeterministic($credentials-name as xs:string?, $options as object()) as xs:anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>credentials-name</xqdoc:name><xqdoc:type occurrence="?">xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>connect-nondeterministic-impl</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>project</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Disconnect from a MongoDB database.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:return>the function has side-effects and returns the empty sequence.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error></xqdoc:comment><xqdoc:name>mongo:disconnect</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:disconnect($db as xs:anyURI) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Checks if the given identifiers is valid and the corresponding
 connection is open.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:return>true if the given connection identifier is valid and the corresponding connection is open, false otherwise.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error></xqdoc:comment><xqdoc:name>mongo:is-connected</xqdoc:name><xqdoc:signature>declare function mongo:is-connected($db as xs:anyURI) as xs:boolean external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:boolean</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Get a list of all the collection names in this database.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:return>a list of the names of all collection in the given database.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:collection-names</xqdoc:name><xqdoc:signature>declare function mongo:collection-names($db as xs:anyURI) as xs:string* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">xs:string*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:comment><xqdoc:description> <p>Get a list of all the collection names in this database.</p>
 <p>This function has the same semantics as
 <a href="#collection-names-1">collection-names#1</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:return>a list of the names of all collection in the given database.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:collection-names-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:collection-names-nondeterministic($db as xs:anyURI) as xs:string* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">xs:string*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Drop a collection.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:return>the function has side-effects and returns the empty sequence.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error></xqdoc:comment><xqdoc:name>mongo:drop-collection</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:drop-collection($db as xs:anyURI, $coll as xs:string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Save a document in the given collection.</p>
 <p>If the document to be saved already has an "_id" field, then an
 upsert operation is performed an any existing document with that
 id will be overwritten. Otherwise, an insert operation is performed
 and the "_id" generated for each document will be returned.</p>
 <p>The success of the operation will be checked and an error is raised if
 the operation failed.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$doc the document to be saved or upserted</xqdoc:param><xqdoc:return>the empty sequence</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error></xqdoc:comment><xqdoc:name>mongo:save</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:save($db as xs:anyURI, $coll as xs:string, $doc as object()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>doc</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>save</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>false</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>true</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Save a document in the given collection.</p>
 <p>If the document to be saved already has an "_id" field, then an
 upsert operation is performed and any existing document with that
 id will be overwritten. Otherwise, an insert operation is performed.</p>
 <p>If the manipulate option is set to true, an "_id" field will be
 added to the document. The new id will be returned. Otherwise,
 the "_id" field will be added by the server.</p>
 <p>If the safe options is set to true, the operation will wait for a
 response from the database and an error is raised if the operation
 failed. Otherwise, the operation will not wait for a response.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$doc the document to be saved or upserted</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>a generated OID if the manipulate option was set to true, the empty sequence otherwise.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error></xqdoc:comment><xqdoc:name>mongo:save</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:save($db as xs:anyURI, $coll as xs:string, $doc as object(), $options as object()) as m-schema:oid? external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>doc</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="?">m-schema:oid?</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Performs an update command on the given collection.</p>
 <p>The operation will be checked and an error is raised if
 one of them fails. Also, this function only modifies one
 document matching the query and does not do any upserts.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $query or $update object
 you should use update#5 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query to select the objects that are updated</xqdoc:param><xqdoc:param>$update the update specification to be performed</xqdoc:param><xqdoc:return>the function has side-effects and returns the empty sequence.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given objects could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:update</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:update($db as xs:anyURI, $coll as xs:string, $query as object(), $update as object()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>update</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="5"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>update</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>false</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="0"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>true</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> <p>Performs an update operation on the given collection.</p>
 <p>
 <ul>
   <li>safe: If to true, the operation will wait for a response from
    the database and an error is raised if the operation fails.
    Otherwise, the operation will not wait for a response.</li>
  <li>multi: indicates if all documents matching criteria should be updated
  rather than just one.</li>
  <li>upsert: if this should be an "upsert" operation; that is,
  if the record(s) do not exist, insert one. Upsert only inserts a single document.</li>
  <li>navigation-character: the character that is used to navigate object fields
      in both the $query and $update fields. Default is ".".</li>
  <li>operator-character: the character that is used to specify MongoDB operators
      in both the $query and $update fields. Default is "$".</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query to select the objects that are updated</xqdoc:param><xqdoc:param>$update the update specification to be performed</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>the function has side-effects and returns the empty sequence.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given objects could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:update</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:update($db as xs:anyURI, $coll as xs:string, $query as object(), $update as object(), $options as object()) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>update</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Performs a remove operation on the given collection.</p>
 <p>The operation will be checked and an error is raised if
 one of them fails.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $query object
 you should use remove#4 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query that identifies the documents to remove</xqdoc:param><xqdoc:return>the function has side-effects and returns the empty sequence.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:remove</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:remove($db as xs:anyURI, $coll as xs:string, $query as object()) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>remove</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Performs a remove operation on the given collection.</p>
 <p>
 <ul>
   <li>safe: If to true, the operation will wait for a response from
    the database and an error is raised if the operation fails.
    Otherwise, the operation will not wait for a response.</li>
  <li>just-one: true if the operation should stop after a single match
    has been found and deleted</li>
  <li>navigation-character: the character that is used to navigate object fields in the
      $query argument. Default is ".".</li>
  <li>operator-character: the character that is used to specify query operators in the
      $query argument. Default is "$".</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query that identifies the documents to remove</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>the function has side-effects and returns the empty sequence.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given document could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:remove</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:remove($db as xs:anyURI, $coll as xs:string, $query as object(), $options as object()) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Counts the number of documents in the given collection.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:return>the said count</xqdoc:return><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:count</xqdoc:name><xqdoc:signature>declare function mongo:count($db as xs:anyURI, $coll as xs:string) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Counts the number of documents satisfying the query in the given collection.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $query object
 you should use count#4 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query specifying which objects to count</xqdoc:param><xqdoc:return>the said count</xqdoc:return><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:count</xqdoc:name><xqdoc:signature>declare function mongo:count($db as xs:anyURI, $coll as xs:string, $query as object()) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Counts the number of documents satisfying the query in the given collection.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Available options:
 <ul>
  <li>navigation-character: the character that is used to navigate object fields in the
      $query argument. Default is ".".</li>
  <li>operator-character: the character that is used to specify query operators in the
      $query argument. Default is "$".</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query specifying which objects to count</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>the said count</xqdoc:return><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:count</xqdoc:name><xqdoc:signature>declare function mongo:count($db as xs:anyURI, $coll as xs:string, $query as object(), $options as object()) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Counts the number of documents in the given collection.</p>
 <p>This function has the same semantics as <a href="#count-2">count#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:return>the said count</xqdoc:return><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:count-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:count-nondeterministic($db as xs:anyURI, $coll as xs:string) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Counts the number of documents satisfying the query in the given collection.</p>
 <p>This function has the same semantics as <a href="#count-3">count#3</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $query object you should
 use count-nondeterministic#4 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query specifying which objects to count</xqdoc:param><xqdoc:return>the said count</xqdoc:return><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:count-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:count-nondeterministic($db as xs:anyURI, $coll as xs:string, $query as object()) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Counts the number of documents satisfying the query in the given collection.</p>
 <p>This function has the same semantics as <a href="#count-3">count#3</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
 <p>Available options:
 <ul>
  <li>navigation-character: the character that is used to navigate object fields in the
      $query argument. Default is ".".</li>
  <li>operator-character: the character that is used to specify query operators in the
      $query argument. Default is "$".</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query specifying which objects to count</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>the said count</xqdoc:return><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:count-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:count-nondeterministic($db as xs:anyURI, $coll as xs:string, $query as object(), $options as object()) as xs:integer external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:integer</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns all objects of the given collection.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:return>all objects of the given collection</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find</xqdoc:name><xqdoc:signature>declare function mongo:find($db as xs:anyURI, $coll as xs:string) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>find</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Returns all objects of the given collection.</p>
 <p>This function has the same semantics as <a href="#find-2">find#2</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:return>all objects of the given collection</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:find-nondeterministic($db as xs:anyURI, $coll as xs:string) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>find-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Performs a query operation on the given collection and
 returns all matches.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $query object
 you should use find#4 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query operation to perform</xqdoc:param><xqdoc:return>all matches returned by the given query operation</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find</xqdoc:name><xqdoc:signature>declare function mongo:find($db as xs:anyURI, $coll as xs:string, $query as object()) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>find</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Performs a query operation on the given collection and
 returns all matches.</p>
 <p>This function has the same semantics as <a href="#find-3">find#3</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $query object
 you should use find-nondeterministic#4 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query operation to perform</xqdoc:param><xqdoc:return>all matches returned by the given query operation</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:find-nondeterministic($db as xs:anyURI, $coll as xs:string, $query as object()) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="4"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>find-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Performs a query operation on the given collection and
 returns all matches.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query operation to perform</xqdoc:param><xqdoc:param>$options the options for this operation (see find#5 for available options)</xqdoc:param><xqdoc:return>all matches returned by the given query operation</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find</xqdoc:name><xqdoc:signature>declare function mongo:find($db as xs:anyURI, $coll as xs:string, $query as object(), $options as object()) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="5"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>find</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> <p>Performs a query operation on the given collection and
 returns all matches.</p>
 <p>This function has the same semantics as <a href="#find-4">find#4</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query operation to perform</xqdoc:param><xqdoc:param>$options the options for this operation (see find#5 for available options)</xqdoc:param><xqdoc:return>all matches returned by the given query operation</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given query could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:find-nondeterministic($db as xs:anyURI, $coll as xs:string, $query as object(), $options as object()) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="5"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>find-nondeterministic</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> <p>Performs a query operation on the given collection and
 returns all matches.</p>
 <p>This function is declared as deterministic and should be used whenever result
 caching is acceptable.</p>
 <p>Available options:
 <ul>
   <li>to-return: the maximum number of objects to return (0 = unlimited)</li>
   <li>to-skip: start with the n-th object</li>
   <li>batch-size: the number of objects to return in one batch</li>
   <li>slave-ok: allow this query to be run against a replica secondary</li>
   <li>await-data: the server will block for some extra time before returning,
   waiting for more data to return</li>
   <li>partial-results: return partial results if some shards are down instead
   of returning an error</li>
   <li>explain: return explain information about execution of this query instead
   of the actual query results</li>
   <li>navigation-character: the character that is used to navigate object fields in the
      $query and $projection arguments. Default is ".".</li>
   <li>operator-character: the character that is used to specify query operators in the
      $query and $projection arguments. Default is "$".</li>
 </ul>
 </p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query operation to perform</xqdoc:param><xqdoc:param>$project the projection to perform on the result</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>all matches returned by the given query operation</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given query or projection could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find</xqdoc:name><xqdoc:signature>declare function mongo:find($db as xs:anyURI, $coll as xs:string, $query as object(), $projection as object(), $options as object()) as object()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>projection</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="5"><xqdoc:comment><xqdoc:description> <p>Performs a query operation on the given collection and
 returns all matches.</p>
 <p>This function has the same semantics as <a href="#find-5">find#5</a>,
 but is declared as being non deterministic and thus should only be used when
 result caching is not desired.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$coll the name of the collection</xqdoc:param><xqdoc:param>$query the query operation to perform</xqdoc:param><xqdoc:param>$project the projection to perform on the result</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>all matches returned by the given query operation</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if any mongodb error happens</xqdoc:error><xqdoc:error>mongo:MONGO006 if the given query or projection could not be converted to BSON</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:find-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:find-nondeterministic($db as xs:anyURI, $coll as xs:string, $query as object(), $projection as object(), $options as object()) as object()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>coll</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>query</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>projection</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Executes a
 <a href="http://docs.mongodb.org/manual/reference/commands/">database command</a>.</p>
 <p>This function is marked as sequential and should be used whenever the
 specified command has side-effects.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $cmd object
 you should use run-cmd#3 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$cmd the database command to execute</xqdoc:param><xqdoc:return>The result object. Typically has { ok : ..., errmsg : ... } fields set.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO006 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:run-cmd</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:run-cmd($db as xs:anyURI, $cmd as object()) as object() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>cmd</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Executes a
 <a href="http://docs.mongodb.org/manual/reference/commands/">database command</a>.</p>
 <p>This function is marked as non-deterministic and should be used whenever the
 specified command has no side-effects and result caching is undesired.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $cmd object
 you should use run-cmd-nondeterministic#3 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$cmd the database command to execute</xqdoc:param><xqdoc:return>The result object. Typically has { ok : ..., errmsg : ... } fields set.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO006 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:run-cmd-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:run-cmd-nondeterministic($db as xs:anyURI, $cmd as object()) as object() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>cmd</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> <p>Executes a
 <a href="http://docs.mongodb.org/manual/reference/commands/">database command</a>.</p>
 <p>This function is marked as deterministic and should be used whenever the
 specified command has no side-effects and result caching is desired.</p>
 <p>To refer to field names starting with a dollar or containing dots in the $cmd object
 you should use run-cmd-deterministic#3 and specify the navigation-character/operator-character options.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$cmd the database command to execute</xqdoc:param><xqdoc:return>The result object. Typically has { ok : ..., errmsg : ... } fields set.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO006 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:run-cmd-deterministic</xqdoc:name><xqdoc:signature>declare function mongo:run-cmd-deterministic($db as xs:anyURI, $cmd as object()) as object() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>cmd</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Executes a
 <a href="http://docs.mongodb.org/manual/reference/commands/">database command</a>.</p>
 <p>Available options:
 <ul>
  <li>navigation-character: the character that is used to navigate object fields in the
      $cmd argument. Default is ".".</li>
  <li>operator-character: the character that is used to specify query operators in the
      $cmd argument. Default is "$".</li>
 </ul>
 </p>
 <p>This function is marked as sequential and should be used whenever the
 specified command has side-effects.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$cmd the database command to execute</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>The result object. Typically has { ok : ..., errmsg : ... } fields set.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO006 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:run-cmd</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:run-cmd($db as xs:anyURI, $cmd as object(), $options as object()) as object() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>cmd</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Executes a
 <a href="http://docs.mongodb.org/manual/reference/commands/">database command</a>.</p>
 <p>Available options:
 <ul>
  <li>navigation-character: the character that is used to navigate object fields in the
      $cmd argument. Default is ".".</li>
  <li>operator-character: the character that is used to specify query operators in the
      $cmd argument. Default is "$".</li>
 </ul>
 </p>
 <p>This function is marked as non-deterministic and should be used whenever the
 specified command has no side-effects and result caching is undesired.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$cmd the database command to execute</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>The result object. Typically has { ok : ..., errmsg : ... } fields set.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO006 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:run-cmd-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function mongo:run-cmd-nondeterministic($db as xs:anyURI, $cmd as object(), $options as object()) as object() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>cmd</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Executes a
 <a href="http://docs.mongodb.org/manual/reference/commands/">database command</a>.</p>
 <p>Available options:
 <ul>
  <li>navigation-character: the character that is used to navigate object fields in the
      $cmd argument. Default is ".".</li>
  <li>operator-character: the character that is used to specify query operators in the
      $cmd argument. Default is "$".</li>
 </ul>
 </p>
 <p>This function is marked as deterministic and should be used whenever the
 specified command has no side-effects and result caching is desired.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$cmd the database command to execute</xqdoc:param><xqdoc:param>$options the options for this operation</xqdoc:param><xqdoc:return>The result object. Typically has { ok : ..., errmsg : ... } fields set.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO006 if any mongodb error happens</xqdoc:error><xqdoc:see><a href="#determinism">Notice about determinism</a></xqdoc:see><xqdoc:see><a href="#navigation-operator-characters">Notice about navigation and operator characters</a></xqdoc:see></xqdoc:comment><xqdoc:name>mongo:run-cmd-deterministic</xqdoc:name><xqdoc:signature>declare function mongo:run-cmd-deterministic($db as xs:anyURI, $cmd as object(), $options as object()) as object() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>cmd</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> <p>Copies a MongoDB database. Be aware, you must call
 this function on the admin database.</p>
</xqdoc:description><xqdoc:param>$db a database connection identifier</xqdoc:param><xqdoc:param>$from-db the name of the source database</xqdoc:param><xqdoc:param>$to-db the name of the target database</xqdoc:param><xqdoc:return>the function has side-effects and returns the empty sequence.</xqdoc:return><xqdoc:error>mongo:MONGO004 invalid database identifier</xqdoc:error><xqdoc:error>mongo:MONGO005 if copy operation fails</xqdoc:error><xqdoc:error>mongo:MONGO006 if any mongodb error happens</xqdoc:error></xqdoc:comment><xqdoc:name>mongo:copy</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function mongo:copy($db as xs:anyURI, $from-db as xs:string, $to-db as xs:string) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>db</xqdoc:name><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>from-db</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>to-db</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/mongodb</xqdoc:uri><xqdoc:name>run-cmd</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="3"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri></xqdoc:uri><xqdoc:name>keys</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>mongo:connect-impl</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function mongo:connect-impl($options as object()) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>mongo:connect-nondeterministic-impl</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %private %an:nondeterministic function mongo:connect-nondeterministic-impl($options as object()) as xs:anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>xs:anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="1"><xqdoc:name>mongo:credentials</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="" namespace="http://www.w3.org/2005/xpath-functions" localname="private" value=""/></xqdoc:annotations><xqdoc:signature>declare %private function mongo:credentials($name as xs:string) as object()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>name</xqdoc:name><xqdoc:type>xs:string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>object()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://www.28msec.com/modules/credentials</xqdoc:uri><xqdoc:name>credentials</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2001/XMLSchema</xqdoc:uri><xqdoc:name>QName</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>empty</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="2"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>error</xqdoc:name></xqdoc:invoked><xqdoc:invoked arity="1"><xqdoc:uri>http://www.w3.org/2005/xpath-functions</xqdoc:uri><xqdoc:name>not</xqdoc:name></xqdoc:invoked></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>