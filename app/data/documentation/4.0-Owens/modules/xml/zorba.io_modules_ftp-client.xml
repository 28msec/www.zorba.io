<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-02-17T14:42:36.342765+02:00</xqdoc:date><xqdoc:version>1.0</xqdoc:version></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>ftp-client</xqdoc:name><xqdoc:comment><xqdoc:description> This module provides functions for performing FTP commands.
 <p/>
</xqdoc:description><xqdoc:author>Paul J. Lucas</xqdoc:author><xqdoc:custom tag="library"><a href="http://curl.haxx.se/">cURL Library</a></xqdoc:custom><xqdoc:custom tag="project">Zorba/Input Output/FTP Client</xqdoc:custom><xqdoc:custom tag="language">jsoniq</xqdoc:custom><xqdoc:custom tag="version">1.0</xqdoc:custom><xqdoc:custom tag="encoding">utf-8</xqdoc:custom></xqdoc:comment><xqdoc:custom tag="namespaces"><xqdoc:namespace prefix="an" uri="http://zorba.io/annotations" isSchema="false"/><xqdoc:namespace prefix="ftp" uri="http://zorba.io/modules/ftp-client" isSchema="false"/><xqdoc:namespace prefix="ver" uri="http://zorba.io/options/versioning" isSchema="false"/></xqdoc:custom></xqdoc:module><xqdoc:imports/><xqdoc:variables/><xqdoc:collections/><xqdoc:indexes/><xqdoc:functions><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Attempts to connect to an FTP server specified by the given URI.
</xqdoc:description><xqdoc:param>$uri The address of the FTP server to connect to. It may either be simple host-name (<code>ftp.example.com</code>) or a URI using the <code>ftp</code> or <code>ftps</code> (FTP over SSL/TLS) schemes (<code>ftp://ftp.example.com</code>). If the latter, the URI may also contain <code>username</code>, <code>password</code>, and <code>port</code> authority subcomponents per RFC 3986.</xqdoc:param><xqdoc:param>$options The options to use: <dl> <dt><code>user</code></dt> <dd> The user to log in as; default: <code>"ftp"</code> (for anonymous FTP). If <code>$uri</code> is actually a URI instead of a simple host-name, the user, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>password</code></dt> <dd> The password to use to log in; default: <code>"ftp@example.com"</code> (for anonymous FTP). If <code>$uri</code> is actually a URI instead of a simple host-name, the password, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>port</code></dt> <dd> The port number to use; default: whatever the default for the protocol is. If <code>$uri</code> is actually a URI instead of a simple host-name, the port, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>protocol</code></dt> <dd> The protocol to use, either <code>"ftp'</code> or <code>"ftps"</code>; default: <code>"ftp"</code>. If <code>$uri</code> is actually a URI instead of a simple host-name, the protocol, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>SSL-communication</code></dt> <dd> Whether to use SSL/TLS, one of: <dl> <dt><code>"none"</code></dt> <dd>Don't use SSL.</dd> <dt><code>"try"</code></dt> <dd>Try using SSL, but, if unsuccessful, continue anyway.</dd> <dt><code>"control"</code></dt> <dd>Require SSL for the control connection.</dd> <dt><code>"all"</code></dt> <dd>Require SSL for all communication.</dd> </dl> default: <code>"none"</code> for protocol <code>"ftp"</code> and <code>"all"</code> for protocol <code>"ftps"</code>. Note that any value other than <code>"none"</code> for <code>"ftp"</code> implies <em>explicit</em> SSL; use of <code>"ftps"</code> implies <em>implicit</em> SSL. See "<a href="http://en.wikipedia.org/wiki/FTPS#Methods_of_invoking_security">Methods of invoking security</a>." </dd> <dt><code>SSL-verify</code></dt> <dd> When doing FTP over SSL/TLS, whether to verify the authenticity of the server's certificate and that the certificate is for that server; default: <code>true</code>. (You should <em>never</em> set this to <code>false</code> unless you are testing your own FTP server with a self-signed certificate.) </dd> <dt><code>trace</code></dt> <dd> Whether to emit information to standard error tracing the communication between the FTP client and server; default: <code>false</code>. </dd> </dl></xqdoc:param><xqdoc:return>an opaque URI that serves as a connection handle to be used with other functions in this module.</xqdoc:return><xqdoc:error>ftp:ALREADY_CONNECTED if <code>$uri</code> is already connected to.</xqdoc:error><xqdoc:error>ftp:INVALID_ARGUMENT if any option is invalid.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:connect</xqdoc:name><xqdoc:signature>declare function ftp:connect($uri as string, $options as object()) as anyURI external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>uri</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>anyURI</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Attempts to connect to an FTP server specified by the given URI.
</xqdoc:description><xqdoc:param>$uri The address of the FTP server to connect to. It may either be simple host-name (<code>ftp.example.com</code>) or a URI using the <code>ftp</code> or <code>ftps</code> (FTP over SSL/TLS) schemes (<code>ftp://ftp.example.com</code>). If the latter, the URI may also contain <code>username</code>, <code>password</code>, and <code>port</code> authority subcomponents per RFC 3986.</xqdoc:param><xqdoc:param>$options The options to use: <dl> <dt><code>user</code></dt> <dd> The user to log in as; default: <code>"ftp"</code> (for anonymous FTP). If <code>$uri</code> is actually a URI instead of a simple host-name, the user, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>password</code></dt> <dd> The password to use to log in; default: <code>"ftp@example.com"</code> (for anonymous FTP). If <code>$uri</code> is actually a URI instead of a simple host-name, the password, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>port</code></dt> <dd> The port number to use; default: whatever the default for the protocol is. If <code>$uri</code> is actually a URI instead of a simple host-name, the port, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>protocol</code></dt> <dd> The protocol to use, either <code>"ftp'</code> or <code>"ftps"</code>; default: <code>"ftp"</code>. If <code>$uri</code> is actually a URI instead of a simple host-name, the protocol, if specified, must be part of the URI and the value of this option is ignored. </dd> <dt><code>SSL-communication</code></dt> <dd> Whether to use SSL/TLS, one of: <dl> <dt><code>"none"</code></dt> <dd>Don't use SSL.</dd> <dt><code>"try"</code></dt> <dd>Try using SSL, but, if unsuccessful, continue anyway.</dd> <dt><code>"control"</code></dt> <dd>Require SSL for the control connection.</dd> <dt><code>"all"</code></dt> <dd>Require SSL for all communication.</dd> </dl> default: <code>"none"</code> for protocol <code>"ftp"</code> and <code>"all"</code> for protocol <code>"ftps"</code>. Note that any value other than <code>"none"</code> for <code>"ftp"</code> implies <em>explicit</em> SSL; use of <code>"ftps"</code> implies <em>implicit</em> SSL. See "<a href="http://en.wikipedia.org/wiki/FTPS#Methods_of_invoking_security">Methods of invoking security</a>." </dd> <dt><code>SSL-verify</code></dt> <dd> When doing FTP over SSL/TLS, whether to verify the authenticity of the server's certificate and that the certificate is for that server; default: <code>true</code>. (You should <em>never</em> set this to <code>false</code> unless you are testing your own FTP server with a self-signed certificate.) </dd> <dt><code>trace</code></dt> <dd> Whether to emit information to standard error tracing the communication between the FTP client and server; default: <code>false</code>. </dd> </dl></xqdoc:param><xqdoc:return>an opaque URI that serves as a connection handle to be used with other functions in this module.</xqdoc:return><xqdoc:error>ftp:ALREADY_CONNECTED if <code>$uri</code> is already connected to.</xqdoc:error><xqdoc:error>ftp:INVALID_ARGUMENT if any option is invalid.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:connect-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function ftp:connect-nondeterministic($uri as string, $options as object()) as anyURI</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>uri</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>options</xqdoc:name><xqdoc:type>object()</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>anyURI</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>connect</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Deletes a file from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the file to delete.</xqdoc:param><xqdoc:return>the empty sequence.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:delete</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function ftp:delete($conn as string, $remote-path as string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Gets a binary file from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the file to get.</xqdoc:param><xqdoc:return>the binary content of <code>$remote-path</code>.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:get-binary</xqdoc:name><xqdoc:signature>declare function ftp:get-binary($conn as anyURI, $remote-path as string) as base64Binary external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Gets a binary file from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the file to get.</xqdoc:param><xqdoc:return>the binary content of <code>$remote-path</code>.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:get-binary-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function ftp:get-binary-nondeterministic($conn as anyURI, $remote-path as string) as base64Binary</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>base64Binary</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>get-binary</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Gets a text file from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the file to get. It must not be empty.</xqdoc:param><xqdoc:param>$encoding The character encoding of the file.</xqdoc:param><xqdoc:return>the text content of <code>$remote-path</code>.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty or <code>$encoding</code> is either an invalid or unsupported encoding.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:get-text</xqdoc:name><xqdoc:signature>declare function ftp:get-text($conn as anyURI, $remote-path as string, $encoding as string) as string external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>encoding</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Gets a text file from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the file to get. It must not be empty.</xqdoc:param><xqdoc:param>$encoding The character encoding of the file.</xqdoc:param><xqdoc:return>the text content of <code>$remote-path</code>.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty or <code>$encoding</code> is either an invalid or unsupported encoding.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:get-text-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function ftp:get-text-nondeterministic($conn as anyURI, $remote-path as string, $encoding as string) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>encoding</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>get-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Gets a text file, presumed to be encoded in UTF-8, from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the file to get. It must not be empty.</xqdoc:param><xqdoc:return>the text content of <code>$remote-path</code>.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:get-text</xqdoc:name><xqdoc:signature>declare function ftp:get-text($conn as anyURI, $remote-path as string) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>get-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Gets a text file, presumed to be encoded in UTF-8, from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the file to get. It must not be empty.</xqdoc:param><xqdoc:return>the text content of <code>$remote-path</code>.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:get-text-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function ftp:get-text-nondeterministic($conn as anyURI, $remote-path as string) as string</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>string</xqdoc:type></xqdoc:return><xqdoc:invoked arity="3"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>get-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Gets a listing for a directory on an FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The full path of the directory on the FTP server to get the directory listing for. An empty path is equivalent to <code>/</code>.</xqdoc:param><xqdoc:return>Returns a sequence of JSON objects, one per file or subdirectory in the listing.</xqdoc:return><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:list</xqdoc:name><xqdoc:signature>declare function ftp:list($conn as anyURI, $remote-path as string) as object()* external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Gets a listing for a directory on an FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The full path of the directory on the FTP server to get the directory listing for. An empty path is equivalent to <code>/</code>.</xqdoc:param><xqdoc:return>Returns a sequence of JSON objects, one per file or subdirectory in the listing.</xqdoc:return><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:list-nondeterministic</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="nondeterministic" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:nondeterministic function ftp:list-nondeterministic($conn as anyURI, $remote-path as string) as object()*</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type occurrence="*">object()*</xqdoc:type></xqdoc:return><xqdoc:invoked arity="2"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>list</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Creates a directory on the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the new directory to create.</xqdoc:param><xqdoc:return>the empty sequence.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:mkdir</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function ftp:mkdir($conn as string, $remote-path as string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Uploads binary data to a file to the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$binary The binary data to upload.</xqdoc:param><xqdoc:param>$remote-path The path of the file to upload to. It must not be empty.</xqdoc:param><xqdoc:return>the empty sequence.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:put-binary</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function ftp:put-binary($conn as anyURI, $binary as base64Binary, $remote-path as string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>binary</xqdoc:name><xqdoc:type>base64Binary</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="4"><xqdoc:comment><xqdoc:description> Uploads text to a file to the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$text The text to upload.</xqdoc:param><xqdoc:param>$remote-path The path of the file to upload to. It must not be empty.</xqdoc:param><xqdoc:param>$encoding The character encoding of the file.</xqdoc:param><xqdoc:return>the empty sequence.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty or <code>$encoding</code> is either an invalid or unsupported encoding.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:put-text</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function ftp:put-text($conn as anyURI, $text as string, $remote-path as string, $encoding as string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>text</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>encoding</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Uploads text to a UTF-8 encoded file on the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$text The text to upload.</xqdoc:param><xqdoc:param>$remote-path The path of the file to upload to. It must not be empty.</xqdoc:param><xqdoc:return>the empty sequence.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:put-text</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function ftp:put-text($conn as anyURI, $text as string, $remote-path as string) as empty-sequence()</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>anyURI</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>text</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return><xqdoc:invoked arity="4"><xqdoc:uri>http://zorba.io/modules/ftp-client</xqdoc:uri><xqdoc:name>put-text</xqdoc:name></xqdoc:invoked></xqdoc:function><xqdoc:function arity="3"><xqdoc:comment><xqdoc:description> Renames a file or directory on an FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-from-path The path of the file or directory to rename.</xqdoc:param><xqdoc:param>$remote-to-path The new name.</xqdoc:param><xqdoc:return>the empty sequence.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-from-path</code> or <code>$remote-to-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:rename</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function ftp:rename($conn as string, $remote-from-path as string, $remote-to-path as string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-from-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-to-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function><xqdoc:function arity="2"><xqdoc:comment><xqdoc:description> Removes a directory from the FTP server.
</xqdoc:description><xqdoc:param>$conn The opaque URI connection handle previously returned by <code>ftp:connect()</code>.</xqdoc:param><xqdoc:param>$remote-path The path of the directory to remove.</xqdoc:param><xqdoc:return>the empty sequence.</xqdoc:return><xqdoc:error>ftp:INVALID_ARGUMENT if <code>$remote-path</code> is empty.</xqdoc:error><xqdoc:error>ftp:NOT_CONNECTED if <code>$conn</code> is either an invalid handle or is no longer a valid handle.</xqdoc:error><xqdoc:error>ftp:FTP_ERROR if there was some other FTP error.</xqdoc:error></xqdoc:comment><xqdoc:name>ftp:rmdir</xqdoc:name><xqdoc:annotations><xqdoc:annotation prefix="an" namespace="http://zorba.io/annotations" localname="sequential" value=""/></xqdoc:annotations><xqdoc:signature>declare %an:sequential function ftp:rmdir($conn as string, $remote-path as string) as empty-sequence() external</xqdoc:signature><xqdoc:parameters><xqdoc:parameter><xqdoc:name>conn</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter><xqdoc:parameter><xqdoc:name>remote-path</xqdoc:name><xqdoc:type>string</xqdoc:type></xqdoc:parameter></xqdoc:parameters><xqdoc:return><xqdoc:type>empty-sequence()</xqdoc:type></xqdoc:return></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>