{ "ns" : "http://www.28msec.com/modules/parallelism", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">This module provides functionality for executing FLWOR queries in parallel.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">There are two kinds of parallel jobs: map jobs and shuffle jobs.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A map job runs a mapping function on the items of an input collection. The input\n collection is chunked and the mapping function is called on each chunk in parallel.\n The results are either inserted in a single collection, or on one ouptut collection\n for each chunk.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">A shuffle job shuffles the items of an input collection to several output collections.\n The input collection is chunked and each chunk is processed in parallel.\n The selection of the output collection for each item is done with a shuffling function.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">It is also possible to run a map or shuffle job on the output of another map or shuffle\n job (piping).\n Keep in mind though that if an intermediate output is in a\n single collection, no chunking can be done: only the first job of the pipeline can chunk\n its input.\n Hence, for performance, it makes sense that all intermediate jobs\n in the pipeline (except the last one, although not compulsory) output to automatically\n generated temporary collections rather than a single collection. That way, the next job\n can be executed on these collections in parallel.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Map jobs allow the parallel execution of \"simple\" FLWORs: a for on a big collection, let clauses,\n small for clauses, where clauses.\n Map-shuffle-map piping allows the parallel execution of FLWORs containing a group by clause.\n Jobs can be composed in many ways, for example map-map-shuffle-map-shuffle-map. This way,\n FLWORs with several group by clauses can be parallelized.\n In some circumstances, FLWORs with order by clauses (using bucket sort) can also be\n parallelized, but one should keep in mind that collections are not ordered so that\n any ordering within a map job is susceptible to be lost in the output.</p>\n", "sees" : [  ], "authors" : [ "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Ghislain Fourny</xqdoc:author>", "<xqdoc:author xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Julien Ribon</xqdoc:author>" ], "version" : null, "encoding" : "utf-8", "namespaces" : [ { "uri" : "", "prefix" : "an" }, { "uri" : "http://www.28msec.com/modules/asynchronous-jobs", "prefix" : "job" }, { "uri" : "http://www.28msec.com/modules/parallelism", "prefix" : "parallel" }, { "uri" : "http://zorba.io/modules/random", "prefix" : "rand" }, { "uri" : "http://www.28msec.com/modules/store", "prefix" : "store" } ], "functions" : [ { "isDocumented" : true, "arity" : 1, "name" : "job-statuses", "qname" : "parallel:job-statuses", "signature" : "($id as xs:string) as object()?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the statuses of the underlying asynchronous jobs, as an object\n indicating the number of chunks in each status.</p>\n", "summary" : "<p>  Returns the statuses of the underlying asynchronous jobs, as an object\n indicating the number of chunks in each status.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "object()?", "description" : "The statuses of the underlying jobs. The empty sequence if the parallel job does not exist." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "map", "qname" : "parallel:map", "signature" : "($input as xs:string, $function as function (item()*) as item()*) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The name of the output collections are randomly generated (one for\n each chunk and start with <tt>_28.temporary</tt>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:map(\"input\", my:function#1)\n", "summary" : "<p>  Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()*) as item()*", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the function which is run in parallel on the collection's contents.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "map", "qname" : "parallel:map", "signature" : "($input as xs:string, $function as function (item()*) as item()*, $options as object()?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the parallel job. Allowed options are:\n <ul>\n   <li><tt>output-collection as string</tt>: the name of the collection in\n     which the output of the executed query is stored. If not specified,\n     the result of the query will be stored in a collection withing the\n     MongoDB database associated with the project. The name of the\n     collection is randomly generated and starts with <tt>_28.temporary</tt>\n   </li>\n   <li><tt>chunk-size</tt>: the size of the chunks the collection must be split\n   into, if it is not already sharded (default: MongoDB sharding, or 1000).\n   </li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:map(\"input\", my:function#1, { \"chunk-size\" : xs:int(1000) })\n parallel:map(\"input\",\n              my:function#1,\n              {\n                \"chunk-size\" : xs:int(1000),\n                \"output-collection\" : output\"\n              }\n )\n", "summary" : "<p>  Schedules a parallel map job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()*) as item()*", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The function which is run in parallel on the collection's contents.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the parallel job.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "output-collections", "qname" : "parallel:output-collections", "signature" : "($id as xs:string) as xs:string*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the output collections of the specified parallel job.</p>\n", "summary" : "<p>  Returns the output collections of the specified parallel job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "xs:string*", "description" : "The names of the output collections to which the corresponding parallel job writes. The empty sequence if the job does not exist." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 1, "name" : "results", "qname" : "parallel:results", "signature" : "($id as xs:string) as item()*", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the results of the specified parallel job.</p>\n", "summary" : "<p>  Returns the results of the specified parallel job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "item()*", "description" : "The structured items output by the corresponding parallel job. The empty sequence if the job does not exist." }, "errors" : [  ] }, { "isDocumented" : true, "arity" : 2, "name" : "shuffle", "qname" : "parallel:shuffle", "signature" : "($input as xs:string, $function as function (item()) as xs:integer) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The output collection for each item is determined by calling the shuffle function,\n which gives an integer i. The i-th output collection\n is then taken. If necessary, a modulo operation is done\n to make sure that the integer is comprised between 1 and the number of output collections.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The name of the output collections are randomly generated (10 of them) and\n start with <tt>_28.temporary</tt>.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:shuffle(\"input\", my:function#1)\n", "summary" : "<p>  Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()) as xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the function which is run on each item to determine where it is shuffled to.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 3, "name" : "shuffle", "qname" : "parallel:shuffle", "signature" : "($input as item(), $function as function (item()) as xs:integer, $options as object()?) as xs:string", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The output collection for each item is determined by calling the shuffle function,\n which gives an integer i. The i-th output collection\n is then taken. If necessary, a modulo operation is done\n to make sure that the integer is comprised between 1 and the number of output collections.</p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">The $options parameter allows for the specification of properties for\n the parallel shuffle job. Allowed options are:\n <ul>\n   <li><tt>number-of-output-collections as integer</tt>: the number of output collections\n     to automatically generate if none are provided. The default value is 10. An error is raised\n     if the provided value is not positive.\n   </li>\n   <li><tt>output-collections as array</tt>: an array with the names of the collections in\n     which the items of the input collections are shuffled. If not specified,\n     these collections will be automatically generated (as many as specified in the\n     <tt>number-of-output-collections</tt> option) in the\n     MongoDB database associated with the project. The name of the\n     collections are randomly generated and start with <tt>_28.temporary</tt>\n   </li>\n   <li><tt>chunk-size</tt>: the size of the chunks the collection must be split\n   into, if it is not already sharded (default: MongoDB sharding, or 1000).\n   </li>\n </ul>\n </p>\n <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Example of usage:</p>\n parallel:shuffle(\"input\", my:function#1, { \"chunk-size\" : xs:int(1000) })\n parallel:shuffle(\"input\",\n                  my:function#1,\n                  {\n                    \"chunk-size\" : xs:int(1000),\n                    \"output-collections\" : [ \"output1\", \"output2\" ]\n                  }\n )\n parallel:shuffle(\"input\",\n                  my:function#1,\n                  {\n                    \"number-of-output-collections\" : 20\n                  }\n )\n", "summary" : "<p>  Schedules a parallel shuffle job on a collection or on the output of another\n parallel job.</p>", "annotation_str" : " %an:sequential", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "sequential", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "input", "type" : "item()", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> The name of the collection to process, or the id of a parallel job of which the output will be taken.</div>" }, { "name" : "function", "type" : "function (item()) as xs:integer", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> the function which is run on each item to determine where it is shuffled to.</div>" }, { "name" : "options", "type" : "object()", "occurrence" : "?", "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> An object specifying above options for the parallel shuffle job.</div>" } ], "returns" : { "type" : "xs:string", "description" : "A parallel job id that can be used to query the parallel job's properties." }, "errors" : [ "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:XPTY0004 if the type of a supplied option is incorrect.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0005 if the supplied function does not have a name.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JBDY0006 if the supplied function is in the local namespace.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">job:JPDY0001 if the input is not an available collection or a parallel job id.</xqdoc:error>", "<xqdoc:error xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">err:FOCA0002 if number-of-output-collections is not a positive integer.</xqdoc:error>" ] }, { "isDocumented" : true, "arity" : 1, "name" : "status", "qname" : "parallel:status", "signature" : "($id as xs:string) as xs:string?", "description" : " <p xmlns:xqdoc=\"http://www.xqdoc.org/1.0\">Returns the general status of the parallel job.</p>\n", "summary" : "<p>  Returns the general status of the parallel job.</p>", "annotation_str" : " %an:nondeterministic", "annotations" : [ { "prefix" : "an", "ns" : "", "name" : "nondeterministic", "value" : "" } ], "updating" : false, "parameters" : [ { "name" : "id", "type" : "xs:string", "occurrence" : null, "description" : "<div xmlns:xqdoc=\"http://www.xqdoc.org/1.0\"> id of the parallel job to query, as it was returned by map or shuffle.</div>" } ], "returns" : { "type" : "xs:string?", "description" : "The status of the corresponding parallel job. The empty sequence if the job does not exist." }, "errors" : [  ] } ], "variables" : [  ] }